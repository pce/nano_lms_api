{"version":3,"sources":["api.js","components/Events/EventsIndexPage.js","utils.js","components/Events/EventsEditPage.js","components/Events/EventsShowPage.js","components/Courses/CoursesIndexPage.js","components/Courses/CoursesShowPage.js","components/Courses/CoursesEditPage.js","components/CalendarPage.js","components/DashboardPage.js","components/Users/UsersIndexPage.js","components/Users/UsersEditPage.js","components/LoginPage.js","components/NotFoundPage.js","components/LayoutAdmin.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","getToken","sessionStorage","getItem","signInData","a","url","axios","post","sign_in","then","response","data","catch","e","console","log","get","headers","id","user","put","fetchCourses","page","fetchCourse","delete","course","title","description","fetchEvent","fetchEvents","error","result","start","format","end","courses_id","coursesId","Number","updateEvent","event","withRouter","props","useState","setData","isLoading","setIsLoading","useEffect","events","Spinner","animation","role","className","Container","style","marginTop","Row","Col","Button","type","variant","onClick","history","push","Table","striped","bordered","hover","size","map","item","dateOfEvent","String","startDate","moment","Date","endDate","formatDateRange","cursor","to","key","courses","setCourses","isMutated","setIsMutated","mode","match","params","handleSaveEvent","createEvent","handleInputDate","name","value","Jumbotron","onChange","target","checked","width","dateFormat","course_id","val","disabled","goBack","handleDeleteEvent","deleteEvent","pathname","window","confirm","query","URLSearchParams","useLocation","search","listAsCards","Card","Header","Body","Text","pagerItems","Array","pager","total_pages","fill","Pagination","First","href","prev_page","Prev","current_page","Item","active","next_page","Next","Last","handleDeleteCourse","deleteCourse","handleSaveCourse","createCourse","updateCourse","handleInput","height","border","localizer","momentLocalizer","CalendarPage","isModalVisible","setIsModalVisible","dataId","setDataId","convertDates","k","v","reviver","evt","handleCloseModal","eventById","find","minHeight","padding","startAccessor","endAccessor","culture","selectable","onSelectEvent","showEvtDia","onSelectSlot","prompt","Modal","show","onHide","closeButton","Title","Footer","handleSaveModal","DashboardPage","background","fetchUsers","users","responsive","email","first_name","last_name","username","fetchUser","handleSaveUser","createUser","updateUser","password","password_confirmation","LoginPage","initialValues","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","isSubmitting","Form","Group","controlId","Label","component","NotFoundPage","Navbar","sticky","bg","Nav","doSignOut","children","App","isAuthenticated","setIsAuthenticated","preventDefault","signOut","removeItem","signIn","is_success","setItem","authentication_token","user_role","admin_role","err","exact","path","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c4328bca.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_HOST\n\nconst getToken = () => {\n  return sessionStorage.getItem('token')\n}\n\n//#region session\n\n/**\n * sign_in\n   curl -XPOST -v -H 'Content-Type: application/json' http://localhost:3000/api/v1/sign_in -d '{\"sign_in\": {\"email\": \"email@example.com\", \"password\": \"admin1\"}}'\n *\n */\nexport async function signIn(signInData) {\n  const url = `${API_URL}/sign_in`\n  return await axios.post(url, {\n      sign_in: signInData\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function signOut() {\n  const url = `${API_URL}/sign_out`\n  return await axios.post(url).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n//#endregion\n\n//#region users\n\nexport async function fetchUsers() {\n  const url = `${API_URL}/users`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchUser(id) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createUser(data) {\n  const url = `${API_URL}/users`\n  return await axios.post(url, {\n    user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function updateUser(id, data) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.put(url, {\n      user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n//#endregion\n\n//#region courses\n\nexport async function fetchCourses(page=1) {\n  const url = `${API_URL}/courses?page=${page}`\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function deleteCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.delete(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n    .catch (e => {\n      console.log(`request failed: ${e}`);\n    })\n}\n\nexport async function updateCourse(id, data) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.put(url, {\n      course: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createCourse(data) {\n  // const course = data.data\n  console.log(data)\n  const url = `${API_URL}/courses`\n  return await axios.post(url, {\n    course:{title: data.title, description: data.description, },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n\n//#endregion\n\n\n//#region events\n\nexport async function fetchEvent(id) {\n  const url = `${API_URL}/events/${id}`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport const fetchEvents = async () => {\n  let data = {}\n  const result = await axios.get(`${API_URL}/events`, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  })\n  .then(response => {\n    console.log('response:')\n    console.log(response)\n    data = response.data\n    return data\n  }).catch(error => console.log(error))\n  return result\n}\n\nexport async function createEvent(data) {\n  console.log(data)\n  const url = `${API_URL}/events`\n  return await axios.post(url, {\n      start: data.start.format(),\n      end: data.end.format(),\n      title: data.title,\n      courses_id: (typeof data.coursesId !== 'undefined') ? Number(data.coursesId) : null,\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n\nexport const updateEvent = async (id, data) => {\n  const url = `${API_URL}/events/${id}`\n  return await axios.put(url, {\n    event:{\n      start: data.start,\n      end: data.end,\n      title: data.title,\n      courses_id: (typeof data.coursesId !== 'undefined') ? Number(data.coursesId) : null,\n    },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n\n}\n\nexport async function deleteEvent(id) {\n  const url = `${API_URL}/events/${id}`\n  return await axios.delete(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n    .catch (e => {\n      console.log(`request failed: ${e}`);\n    })\n}\n\n\n/*\nexport const updateEvent = async (eventData) => {\n  // const response = await fetch(`${API_URL}/events/`, {\n  await fetch(`${API_URL}/events/`, {\n    method: \"patch\",\n    credentials: \"include\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  }).then(function(response) {\n      return response.json();\n  }).then(function(data) {\n      console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n      console.log(\"parsing failed\", ex);\n  })\n}\n*/\n//#endregion\n\n/**\n * sign_in\n   curl -XPOST -v -H 'Content-Type: application/json' http://localhost:3000/api/v1/sign_in -d '{\"sign_in\": {\"email\": \"email@example.com\", \"password\": \"admin1\"}}'\n *\n *\nexport const signIn = async (signInData) => {\n  const response = await fetch(`${API_URL}/sign_in`, {\n    method: \"post\",\n    // credentials: \"include\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(signInData)\n  }).then(function(response) {\n    return response.json();\n  }).then(function(data) {\n    console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n    console.log(\"parsing failed\", ex);\n  })\n\n}\n\nconst createEvent = async (eventData) => {\n  const response = await fetch(`${API_URL}/events/`, {\n    method: \"put\",\n    credentials: \"include\",\n    headers: {\n      \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  }).then(function(response) {\n      return response.json();\n  }).then(function(data) {\n      console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n      console.log(\"parsing failed\", ex);\n  })\n}\n\n\n\n*/\n\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport { withRouter } from 'react-router-dom'\nimport { LinkContainer } from \"react-router-bootstrap\"\n\nimport { fetchEvents } from '../../api'\nimport {formatDateRange } from '../../utils'\n\n\nconst EventsIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEvents().then((response)=>{\n      console.log(response.data)\n      setData(response.data.events)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddCourse = () => {\n    props.history.push('events/create')\n  }\n\n  return (!isLoading) ?\n    <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>Termine</h1>\n        {((sessionStorage.getItem('admin_role')) && (<Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>))}\n        <Table striped bordered hover size=\"sm\" style={{marginTop:'8px'}}>\n        <thead>\n          <tr>\n            {/* <th>#</th> */}\n            <th>Name</th>\n            <th>Datum</th>\n            <th>Kurs</th>\n          </tr>\n        </thead>\n        <tbody>\n        {data.map((item)=>{\n          const dateOfEvent = String(formatDateRange(item.start, item.end))\n          console.log(dateOfEvent)\n            return (\n              <tr style={{cursor:\"pointer\"}}>\n                <td>\n                  <LinkContainer to={`/events/${item.id}`}>\n                    <h2 key={item.id}  >{item.title}</h2>\n                  </LinkContainer>\n                </td>\n                <td>\n                {dateOfEvent}\n                </td>\n                <td>\n                {item.course && item.course.title}\n                </td>\n              </tr>\n            )\n          })\n          }\n          </tbody>\n        </Table>\n        </Col>\n      </Row>\n    </Container>\n  : <Spinner animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n </Spinner>\n}\n\nexport default withRouter(EventsIndexPage)\n","import moment from 'moment'\n\n\nexport function formatDateRange(start, end) {\n  let startDate = moment(new Date(start))\n  let endDate = moment(new Date(end))\n  if (startDate.format('DDMMY') === endDate.format('DDMMY')) {\n    return `${startDate.format('DD.MM.Y')}  ${startDate.format('HH:mm')} - ${endDate.format('HH:mm')}`\n  }\n  return `${startDate.format('DD.MM.Y')}  ${startDate.format('HH:mm')} - ${endDate.format('HH:mm')} (${endDate.format('DD.MM.Y')})`\n}\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Datetime from 'react-datetime'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchEvent, updateEvent, createEvent, fetchCourses } from '../../api'\n\nfunction EventsEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    start:'',\n    end:'',\n    title:''\n  })\n  const [courses, setCourses] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchEvent(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.event)\n      setIsLoading(false)\n    })\n    fetchCourses().then((response) => {\n      // console.log(response.data)\n      setCourses(response.data.courses)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleSaveEvent = (id) => {\n    if (props.mode === 'create') {\n      createEvent(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/events')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateEvent(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/events')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInputDateStart = (event) => {\n    handleInputDate(event, 'start')\n  }\n\n  const handleInputDateEnd = (event) => {\n    handleInputDate(event, 'end')\n  }\n\n  const handleInputDate = (event, name) => {\n    // see https://momentjs.com/docs/#/displaying/\n    let value = event\n    // if (event.format) {\n    //   value = event.format();\n    // }\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n  const handleInput = (event) => {\n    console.log(data)\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n  // console.log('data')\n  // console.log(data)\n\n  return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>title</label><br/>\n        <input type=\"text\" value={data.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n        <label>start</label><br/>\n        <Datetime dateFormat=\"DD.MM.YYYY\" value={data.start} name=\"start\" onChange={handleInputDateStart}  />\n\n        <label>end</label><br/>\n        <Datetime dateFormat=\"DD.MM.YYYY\" value={data.end} name=\"end\" onChange={handleInputDateEnd} />\n\n        <label>Kurs</label><br/>\n        <select value={data.course_id}>\n          <option value={null}>--</option>\n          {courses.map((val)=> <option value={val.id}>{val.title}</option>)}\n        </select>\n        <br/>\n        <br/>\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveEvent(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(EventsEditPage)","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport { withRouter } from 'react-router-dom'\nimport { fetchEvent,  deleteEvent } from '../../api'\n\nfunction EventsShowPage(props) {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEvent(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, []);\n\n const handleEditEvent = (id) => {\n  props.history.push({\n   pathname: `/events/${id}/edit`\n  });\n };\n\n const handleDeleteEvent = (id) => {\n  // const event = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n  deleteEvent(id)\n   .then((result) => {\n    setIsLoading(false);\n    props.history.push('/events')\n   }).catch((error) => setIsLoading(false));\n };\n\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <Jumbotron>\n    <h2>{data.event.title}</h2>\n    <p>{data.event.start}</p>\n    <p>{data.event.end}</p>\n\n    <p>{data.event.course_id}</p>\n\n    <p>\n      <br/>\n      <Button type=\"button\" variant=\"secondary\" onClick={() => { props.history.goBack() }}>Cancel</Button>&nbsp;\n\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditEvent(data.event.id) }}>Edit</Button>&nbsp;\n     <Button type=\"button\" variant=\"danger\" onClick={() => { if (window.confirm('Delete?')) handleDeleteEvent(data.event.id) }}>Delete</Button>\n    </p>\n   </Jumbotron>)}\n  </Col>\n  </Row>\n  </Container>\n );\n}\n\nexport default withRouter(EventsShowPage);","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport Pagination from 'react-bootstrap/Pagination'\n\nimport { withRouter, useLocation } from 'react-router-dom'\n\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { fetchCourses } from '../../api'\n\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst CoursesIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const query = useQuery();\n\n  // let name = query.get(\"name\")\n\n  useEffect(() => {\n    let page = query.get(\"page\") || 1\n    fetchCourses(page).then((response) => {\n      // console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleAddCourse = () => {\n    props.history.push('courses/create')\n  }\n\n  const pageChanged = (e) => {\n    console.log(e.target)\n    // let page = Number(e.target.value)\n    // props.history.push(`courses?page=${page}`)\n  }\n\n  const listAsCards = () => {\n    return data.courses.map((item)=>{\n      return (\n        <Card style={{marginTop:'4px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Body>\n          {/* <Card.Title>{item.title}</Card.Title> */}\n          <Card.Text>\n            {item.description}\n          </Card.Text>\n          <LinkContainer to={`/courses/${item.id}`}>\n            <Button variant=\"primary\">mehr ...</Button>\n          </LinkContainer>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n      )\n    })\n  }\n\n\n  if (isLoading) {\n    return <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  }\n\n  // todo: prepare pager vars for more than 10 pages (with <Pagination.Ellipsis />)\n  // total > 10, from: (total / 2) +5, to: (total / 2) +5,\n  const pagerItems = new Array(data.pager.total_pages).fill(1)\n\n  return <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>Kurse</h1>\n        {((sessionStorage.getItem('admin_role')) && (\n          <><Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>\n          {listAsCards()}\n          </>\n        )) || (\n          listAsCards()\n        )}\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination onClick={pageChanged}>\n            <Pagination.First href=\"courses?page=1\"/>\n            {((data.pager && data.pager.prev_page) &&\n              <Pagination.Prev value=\"1\" href={`courses?page=${data.pager.prev_page}`} />\n            )}\n            {pagerItems.map((item, key)=>{\n              let page = key +1\n              return (data.pager.current_page === page) ?\n                <Pagination.Item active>{page}</Pagination.Item> :\n                <Pagination.Item href={`courses?page=${page}`}>{page}</Pagination.Item>\n            })}\n            {((data.pager && data.pager.next_page) &&\n              <Pagination.Next value=\"1\" href={`courses?page=${data.pager.next_page}`} />\n            )}\n            <Pagination.Last href={`courses?page=${data.pager.total_pages}`}/>\n          </Pagination>\n        </Col>\n      </Row>\n    </Container>\n}\n\nexport default withRouter(CoursesIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport { withRouter } from 'react-router-dom'\nimport { format } from 'date-fns'\nimport parse from 'date-fns/parse'\nimport { fetchCourse,  deleteCourse } from '../../api'\n\nfunction CoursesShowPage(props) {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCourse(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, []);\n\n const handleEditCourse = (id) => {\n  props.history.push({\n   pathname: `/courses/${id}/edit`\n  });\n };\n\n const handleDeleteCourse = (id) => {\n  // const course = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n  deleteCourse(id)\n   .then((result) => {\n    setIsLoading(false);\n    props.history.push('/courses')\n   }).catch((error) => setIsLoading(false));\n };\n\n\n const listEvents = () => {\n  return data.events.map((item)=>{\n    return (\n      <Card style={{marginTop:'4px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Body>\n          {/* <Card.Title>{item.title}</Card.Title> */}\n          <Card.Text>\n            {item.start} - {item.end}\n{/*\n  2020-03-28T13:00:53.000Z\n  {(parse(item.start, 'yyyy-MM-ddHH:mm:ss.000Z', new Date()), 'DD.MM.YYYY HH:mm')} - {  (parse(item.end, 'yyyy-MM-ddHH:mm:ss.000Z', new Date()), 'DD.MM.YYYY HH:mm')}\n*/}\n          </Card.Text>\n          {/* <LinkContainer to={`/events/${item.id}`}>\n            <Button variant=\"primary\">mehr ...</Button>\n          </LinkContainer> */}\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n      )\n    })\n  }\n\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <Jumbotron>\n    <h2>{data.course.title}</h2>\n    <p>{data.course.description}</p>\n\n    {listEvents()}\n\n    <p>\n      <br/>\n     <Button type=\"button\" variant=\"secondary\" onClick={() => { props.history.goBack() }}>Cancel</Button>&nbsp;\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditCourse(data.course.id) }}>Edit</Button>&nbsp;\n     <Button type=\"button\" variant=\"danger\" onClick={() => { if (window.confirm('Delete?')) handleDeleteCourse(data.course.id) }}>Delete</Button>\n    </p>\n   </Jumbotron>)}\n  </Col>\n  </Row>\n  </Container>\n );\n}\n\nexport default withRouter(CoursesShowPage);","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchCourse, updateCourse, createCourse } from '../../api'\n\nfunction CoursesEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    description:'',\n    title:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchCourse(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.course)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleSaveCourse = (id) => {\n    // const course = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n    if (props.mode === 'create') {\n      createCourse(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateCourse(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>title</label><br/>\n        <input type=\"text\" value={data.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n        <label>description</label><br/>\n        <textarea style={{height:'10em', width:'100%', border:'none'}} value={data.description} onChange={handleInput} name=\"description\" ></textarea>\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveCourse(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(CoursesEditPage)","import React, {useState, useEffect} from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Datetime from 'react-datetime'\nimport Spinner from 'react-bootstrap/Spinner'\n\nimport moment from 'moment'\n\nimport { fetchEvents, updateEvent } from '../api'\nimport 'react-datetime/css/react-datetime.css'\nimport 'react-big-calendar/lib/sass/styles.scss'\n// import 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\n\n\nconst localizer = momentLocalizer(moment)\n\nconst resourceMap = [\n  { resourceId: 1, resourceTitle: 'Großer Raum' },\n  { resourceId: 2, resourceTitle: 'Kleiner Raum' },\n  { resourceId: 3, resourceTitle: 'Raum Oben' },\n  // { resourceId: 4, resourceTitle: 'Raum 4' },\n]\n\nexport const CalendarPage = props => {\n\n  const [ isModalVisible, setIsModalVisible ] = useState(0)\n  const [ dataId, setDataId ] = useState(0)\n  const [ data, setData ] = useState({events:[]})\n  const [isLoading, setIsLoading] = useState(true);\n\n  // const allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k])\n\n  const convertDates = (data) => {\n    const reviver = (key, value) => {\n      let startDate = new Date(key['start'])\n      let endDate = new Date(key['end'])\n      let start = moment(startDate)\n      let end = moment(endDate)\n      // add end if same day : startDate.format('Ymd') == endDate.format('Ymd')\n      key['title'] = key['title'] + \" \" + start.format('HH:mm') + \"-\" + end.format('HH:mm')\n      // Calendar expects Date Objects\n      key['start'] = startDate\n      key['end'] = endDate\n      return key;\n    }\n    data.events = data.events.map((k, v)=>reviver(k, v))\n    return data\n  }\n\n  useEffect(() => {\n    console.log(\"Calendar\")\n    fetchEvents().then(response => {\n      console.log('response.data')\n      console.log(response.data.events)\n      if (response.data) {\n        let data = convertDates(response.data)\n        // let data = response.data\n        setData({events:data.events})\n      }\n      setIsLoading(false)\n    }).catch(e => console.log(e))\n  }, [])\n\n  const showEvtDia = (e, evt) => {\n    console && console.log(data)\n    setDataId(evt.id)\n    setIsModalVisible(1)\n    // isModalVisible,\n    console && console.log(e, evt)\n  }\n\n  const handleCloseModal = () => {\n    setIsModalVisible(0)\n  }\n\n  const handleSaveModal = (dataId) => {\n    // console.log(eventById(dataId))\n    updateEvent(eventById(dataId))\n    setIsModalVisible(0)\n  }\n\n  const form = (evt) => {\n    // return evt.start\n    // console.log(evt.start) evt.start.toString()\n    // resourceMap.map()\n    return <>\n      Start: <Datetime dateFormat=\"DD.MM.YYYY\" value={evt.start}  />\n      End: <Datetime dateFormat=\"DD.MM.YYYY\" value={evt.end}  />\n      {/*\n      Raum: <select>\n      {resourceMap.map((room) => {\n        return (evt.resourceId !== room.resourceId) ?\n        <option value={room.resourceId}>{room.resourceTitle}</option>\n        :\n        <option selected value={room.resourceId}>{room.resourceTitle}</option>\n      })\n      }</select>\n       */}\n    </>\n  }\n\n  const handleSelect = ({ start, end }) => {\n    // createEvent\n    const title = window.prompt('Event name')\n    if (title)\n      setData({\n        events: [\n          ...data.events,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n      })\n  }\n\n  const eventById = (id) => {\n    return data.events.find(item => item.id === id)\n  }\n\n  // (typeof data.events.results !== 'undefined') ?\n  return (\n    (!isLoading) ?\n    // parent container of calendar-month-view requires a min-height\n    <div style={{ height: '100%', minHeight: 600, padding:'10px' }}>\n\n    <Calendar\n      localizer={localizer}\n      events={data.events}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n      culture='de'\n      selectable\n      onSelectEvent={(evt, e)=> showEvtDia(e, evt)}\n      onSelectSlot={handleSelect}\n      // views={allViews}\n      // step={60}\n      // showMultiDayTimes\n      // defaultDate={new Date()}\n      // resources={resourceMap}\n      // resourceIdAccessor=\"resourceId\"\n      // resourceTitleAccessor=\"resourceTitle\"\n    />\n\n    <Modal show={isModalVisible} onHide={handleCloseModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{dataId && eventById(dataId).title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{dataId && form(eventById(dataId))}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => { handleSaveModal(dataId) }} >\n          Save Changes\n        </Button>\n      </Modal.Footer>\n      </Modal>\n    </div>\n   : <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchCourses } from '../api'\n\nexport const DashboardPage = () => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  useEffect(() => {\n    fetchCourses().then((response)=>{\n      console.log(response.data)\n      setData(response.data.courses)\n      setIsLoading(false)\n    })\n   }, []);\n\n  return (!isLoading) ? <div style={{background:'#fff', marginTop:'2em'}}>\n    <h1>Dashboard</h1>\n    <p>Hallo!</p>\n  </div>\n  : <p>Loading...</p>\n\n}","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUsers } from '../../api'\n\nconst UsersIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchUsers().then((response)=>{\n      console.log(response)\n      console.log(response.data)\n      setData(response.data.users)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddUser = () => {\n    props.history.push('users/create')\n  }\n\n  const handleEditUser = (id) => {\n    props.history.push(`users/${id}/edit`)\n  }\n\n  return <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <>\n\n    <h1>Benutzer</h1>\n\n    {sessionStorage.getItem('admin_role') &&\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleAddUser() }}>Add</Button>\n    }\n    <Table responsive>\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>E-Mail</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n    {data.map((item)=>{\n        return <tr>\n          <td>\n          {item.id}\n          </td>\n          <td>\n          {item.email}  {item.first_name} {item.last_name}\n          </td>\n          <td>\n          <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditUser(item.id) }}>Edit</Button>\n          </td>\n        </tr>\n      } )}\n      </tbody>\n    </Table>\n   </>)}\n  </Col>\n  </Row>\n  </Container>\n\n}\n\n\nexport default withRouter(UsersIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUser, updateUser, createUser } from '../../api'\n\nfunction UsersEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    username:'',\n    email:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchUser(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.user)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleSaveUser = (id) => {\n    if (props.mode === 'create') {\n      createUser(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateUser(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    // console.log(data)\n    setIsMutated(true)\n  }\n\n  return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n        {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>)) || (\n          <Jumbotron>\n            <label>email</label><br/>\n            <input type=\"text\" value={data.email} name=\"email\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            <label>username</label><br/>\n            <input type=\"text\" value={data.username} name=\"username\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            {((props.mode === 'create') && (\n            <>\n            <label>password</label><br/>\n            <input type=\"text\" value={data.password} name=\"password\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            <label>password confirmation</label><br/>\n            <input type=\"text\" value={data.password_confirmation} name=\"password_confirmation\" onChange={handleInput} style={{width:'100%'}} /><br/>\n            </>\n            ))}\n\n            <br/>\n            <p>\n            <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveUser(data.id) }}>Save</Button>&nbsp;\n            <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n            </p>\n          </Jumbotron>)}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default withRouter(UsersEditPage)","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik'\n\nimport \"../assets/sass/login.sass\"\n\nexport const LoginPage = (props) => {\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center h-100\">\n        <div className=\"card zoomInUp animated\">\n          <div className=\"card-header\">\n\n            <Formik\n              initialValues={{ email: '', password: '' }}\n              validate={values => {\n                const errors = {};\n                if (!values.email) {\n                  errors.email = 'Required';\n                } else if (\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                  errors.email = 'Invalid email address';\n                }\n                return errors;\n              }}\n              onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                  props.onSubmit(values)\n                  setSubmitting(false);\n                }, 400);\n              }}\n            >\n              {({ isSubmitting }) => (\n                <FormikForm>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Field type=\"email\" name=\"email\"  className='form-control'  />\n                    <ErrorMessage name=\"email\" component=\"div\" />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Field type=\"password\" name=\"password\" className='form-control' />\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting} className=\"login-btn\">\n                    Submit\n                  </Button>\n\n                </FormikForm>\n              )}\n            </Formik>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return <div style={{background:'#fff', marginTop:'2em'}}>\n    <h1>404 Not Found</h1>\n  </div>\n}\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from 'react-router-dom'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport '../assets/sass/main.sass';\n\nconst LayoutAdmin = (props) => {\n\n  return (<>\n    <Navbar sticky=\"top\" bg=\"light\">\n      {/* <Navbar.Brand href=\"/\">::</Navbar.Brand> */}\n      <Nav className=\"mr-auto\" variant=\"pills\" >\n        <Nav.Item>\n          <Link to=\"/courses\"> Courses </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/calendar\"> Calendar </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/events\"> Termine </Link>\n        </Nav.Item>\n        {sessionStorage.getItem('admin_role') && (\n        <Nav.Item>\n          <Link to=\"/users\"> Users</Link>\n        </Nav.Item>\n        )}\n      </Nav>\n\n      {/* <Nav.Item onClick={props.doSignOut}>Logout</Nav.Item> */}\n      <Button onClick={(e) => props.doSignOut(e)} variant=\"outline-primary\">Logout</Button>\n      {/* <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-info\">Search</Button>\n      </Form> */}\n    </Navbar>\n\n    {props.children}\n\n  </>)\n}\n\nexport default withRouter(LayoutAdmin);","import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Redirect\n} from \"react-router-dom\";\n\nimport EventsIndexPage from './components/Events/EventsIndexPage';\nimport EventsEditPage from './components/Events/EventsEditPage';\nimport EventsShowPage from './components/Events/EventsShowPage';\nimport CoursesIndexPage from './components/Courses/CoursesIndexPage';\nimport CoursesShowPage  from './components/Courses/CoursesShowPage';\nimport CoursesEditPage  from './components/Courses/CoursesEditPage';\nimport { CalendarPage } from './components/CalendarPage';\nimport { DashboardPage } from './components/DashboardPage';\nimport UsersIndexPage from './components/Users/UsersIndexPage';\nimport UsersEditPage from './components/Users/UsersEditPage';\nimport { LoginPage } from './components/LoginPage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport LayoutAdmin  from './components/LayoutAdmin';\nimport { signIn, signOut } from './api'\n\nfunction App() {\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(()=>{\n    const token = sessionStorage.getItem('token')\n    if (token)\n      setIsAuthenticated(true)\n      // meFromToken(token)\n      // .then((resp) => setIsAuthenticated(resp))\n  }, [setIsAuthenticated])\n\n  const doSignIn = (data) => {\n    // e.preventDefault()\n    signIn(data).then(response => {\n      // console.log(response)\n      if (response && response.is_success) {\n        setIsAuthenticated(true)\n        // user.authentication_token\n        sessionStorage.setItem('token', response.data.user.authentication_token)\n        sessionStorage.setItem('user_role', response.data.user.user_role)\n        sessionStorage.setItem('admin_role', response.data.user.admin_role)\n        // sessionStorage.setItem('supervisor_role', response.data.supervisor_role)\n      }\n    }).catch(err => console.log(err))\n  }\n\n  const doSignOut = (e) => {\n    e.preventDefault()\n    console.log(\"sign out\")\n    signOut().then(response => {\n      // console.log(response)\n      setIsAuthenticated(false)\n      sessionStorage.removeItem('token')\n    }).catch(e => console.log(e))\n  }\n\n  return (\n    (!isAuthenticated && (\n      <div className=\"login\">\n       <LoginPage onSubmit={doSignIn} />\n     </div>\n   )) || (\n   <Router>\n      <Switch>\n       <Route exact path=\"/\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <DashboardPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <EventsIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <EventsEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/create\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <EventsEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/:id\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <EventsShowPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/create\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesShowPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/calendar\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CalendarPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/users/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users/create\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/oops\" component={NotFoundPage} />\n       <Redirect to='/oops' />\n    </Switch>\n    </Router>)\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport \"./assets/sass/main.sass\";\nimport \"./assets/css/animate.min.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}