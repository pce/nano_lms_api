{"version":3,"sources":["api.js","components/Events/EventsIndexPage.js","components/Courses/CoursesIndexPage.js","components/Courses/CoursesShowPage.js","components/Courses/CoursesEditPage.js","components/CalendarPage.js","components/DashboardPage.js","components/Users/UsersIndexPage.js","components/Users/UsersEditPage.js","components/LoginPage.js","components/NotFoundPage.js","components/LayoutAdmin.js","App.js","serviceWorker.js","index.js"],"names":["API_URL","process","getToken","sessionStorage","getItem","signInData","a","url","axios","post","sign_in","then","response","data","catch","e","console","log","get","headers","id","user","put","fetchCourses","fetchCourse","delete","course","title","description","fetchEvents","error","result","updateEvent","event","start","end","courses_id","coursesId","Number","withRouter","props","useState","setData","isLoading","setIsLoading","useEffect","events","listAsCards","map","item","Card","style","marginTop","Header","Body","Text","to","Button","variant","Spinner","animation","role","className","Container","Row","Col","type","onClick","history","push","courses","match","params","handleDeleteCourse","deleteCourse","Jumbotron","pathname","isMutated","setIsMutated","mode","handleSaveCourse","createCourse","updateCourse","handleInput","name","target","value","checked","onChange","width","height","border","disabled","goBack","localizer","momentLocalizer","moment","CalendarPage","isModalVisible","setIsModalVisible","dataId","setDataId","evt","handleCloseModal","eventById","find","minHeight","padding","startAccessor","endAccessor","culture","selectable","onSelectEvent","showEvtDia","onSelectSlot","window","prompt","Modal","show","onHide","closeButton","Title","dateFormat","Footer","handleSaveModal","DashboardPage","background","fetchUsers","users","Table","responsive","email","first_name","last_name","username","fetchUser","handleSaveUser","createUser","updateUser","LoginPage","password","handleChange","Form","onSubmit","Group","controlId","Label","Control","placeholder","loginForm","NotFoundPage","Navbar","sticky","bg","Nav","Item","doSignOut","children","App","isAuthenticated","setIsAuthenticated","preventDefault","signOut","remotItemt","signIn","is_success","setItem","authentication_token","user_role","admin_role","exact","path","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"qTAEMA,EAAUC,oCAEVC,EAAW,WACf,OAAOC,eAAeC,QAAQ,U,4CAUzB,WAAsBC,GAAtB,eAAAC,EAAA,6DACCC,EADD,UACUP,EADV,qBAEQQ,IAAMC,KAAKF,EAAK,CACzBG,QAASL,IACVM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAN5B,oF,kEAUA,4BAAAT,EAAA,6DACCC,EADD,UACUP,EADV,sBAEQQ,IAAMC,KAAKF,GAAKI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QACtDC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAJ5B,oF,kEAYA,4BAAAT,EAAA,6DACCC,EADD,UACUP,EADV,mBAEQQ,IAAMU,IAAIX,EAAM,CAC3BY,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAR5B,oF,kEAYA,WAAyBK,GAAzB,eAAAd,EAAA,6DACCC,EADD,UACUP,EADV,kBAC2BoB,GAD3B,SAEQZ,IAAMU,IAAIX,EAAK,CAC1BY,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAR5B,oF,kEAYA,WAA0BF,GAA1B,eAAAP,EAAA,6DACCC,EADD,UACUP,EADV,mBAEQQ,IAAMC,KAAKF,EAAK,CAC3Bc,KAAMR,GACL,CACDM,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAV5B,oF,kEAcA,WAA0BK,EAAIP,GAA9B,eAAAP,EAAA,6DACCC,EADD,UACUP,EADV,kBAC2BoB,GAD3B,SAEQZ,IAAMc,IAAIf,EAAK,CACxBc,KAAMR,GACP,CACDM,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAV5B,oF,sBAiBA,SAAeQ,IAAtB,+B,4CAAO,4BAAAjB,EAAA,6DACCC,EADD,UACUP,EADV,qBAEQQ,IAAMU,IAAIX,EAAK,CAC1BY,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAR5B,oF,sBAYA,SAAeS,EAAtB,kC,4CAAO,WAA2BJ,GAA3B,eAAAd,EAAA,6DACCC,EADD,UACUP,EADV,oBAC6BoB,GAD7B,SAEQZ,IAAMU,IAAIX,EAAM,CAC3BY,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAR5B,oF,kEAYA,WAA4BK,GAA5B,eAAAd,EAAA,6DACCC,EADD,UACUP,EADV,oBAC6BoB,GAD7B,SAEQZ,IAAMiB,OAAOlB,EAAK,CAC7BY,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAR9B,oF,kEAYA,WAA4BK,EAAIP,GAAhC,eAAAP,EAAA,6DACCC,EADD,UACUP,EADV,oBAC6BoB,GAD7B,SAEQZ,IAAMc,IAAIf,EAAK,CACxBmB,OAAQb,GACT,CACDM,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAV5B,oF,kEAcA,WAA4BF,GAA5B,eAAAP,EAAA,6DAELU,QAAQC,IAAIJ,GACNN,EAHD,UAGUP,EAHV,qBAIQQ,IAAMC,KAAKF,EAAK,CAC3BmB,OAAO,CAACC,MAAOd,EAAKc,MAAOC,YAAaf,EAAKe,cAC5C,CACDT,QAAS,CACP,aAAcjB,OAEfS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAZ5B,oF,sBAuBA,IAAMc,EAAW,uCAAG,4BAAAvB,EAAA,4DACd,GADc,SAEJE,IAAMU,IAAN,UAAalB,EAAb,WAA+B,CAClDmB,QAAS,CACP,aAAcjB,OAGjBS,MAAK,SAAAC,GAIJ,OAHAI,QAAQC,IAAI,aACZD,QAAQC,IAAIL,GACLA,EAASC,QAEfC,OAAM,SAAAgB,GAAK,OAAId,QAAQC,IAAIa,MAZL,cAEnBC,EAFmB,yBAalBA,GAbkB,2CAAH,qDAsCjB,IAAMC,EAAW,uCAAG,WAAOZ,EAAIP,GAAX,eAAAP,EAAA,6DACnBC,EADmB,UACVP,EADU,mBACQoB,GADR,SAEZZ,IAAMc,IAAIf,EAAK,CAC1B0B,MAAM,CACJC,MAAOrB,EAAKqB,MACZC,IAAKtB,EAAKsB,IACVR,MAAOd,EAAKc,MACZS,WAAuC,qBAAnBvB,EAAKwB,UAA6BC,OAAOzB,EAAKwB,WAAa,OAEhF,CACDlB,QAAS,CACP,aAAcjB,IACd,OAAU,mBACV,eAAgB,sBAEjBS,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC5BC,OAAO,SAAAC,GACNC,QAAQC,IAAR,0BAA+BF,OAjBR,mFAAH,wDCtHTwB,eAzES,SAACC,GAAW,IAAD,EAETC,mBAAS,IAFA,mBAE1B5B,EAF0B,KAEpB6B,EAFoB,OAGCD,oBAAS,GAHV,mBAG1BE,EAH0B,KAGfC,EAHe,KAKjCC,qBAAU,WACRhB,IAAclB,MAAK,SAACC,GAClBI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKiC,QACtBF,GAAa,QAEb,IAEJ,IAoBMG,EAAc,WAClB,OAAOlC,EAAKmC,KAAI,SAACC,GACf,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,UAAU,QACxB,kBAACF,EAAA,EAAKG,OAAN,KAAcJ,EAAKtB,OACnB,kBAACuB,EAAA,EAAKI,KAAN,KAEE,kBAACJ,EAAA,EAAKK,KAAN,KACGN,EAAKrB,aAER,kBAAC,gBAAD,CAAe4B,GAAE,kBAAaP,EAAK7B,KACjC,kBAACqC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mBASV,OAASf,EAeP,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UACnC,0BAAMC,UAAU,WAAhB,eAfE,kBAACC,EAAA,EAAD,CAAYZ,MAAO,CAACC,UAAU,QAC9B,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uCACG9D,eAAeC,QAAQ,eACxB,oCAAE,kBAACqD,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,UAAUS,QAAS,WA7CzD3B,EAAM4B,QAAQC,KAAK,mBA6CX,OACDtB,MAGDA,UCWKR,eA1EU,SAACC,GAAW,IAAD,EAEVC,mBAAS,IAFC,mBAE3B5B,EAF2B,KAErB6B,EAFqB,OAGAD,oBAAS,GAHT,mBAG3BE,EAH2B,KAGhBC,EAHgB,KAKlCC,qBAAU,WACRtB,IAAeZ,MAAK,SAACC,GACnBI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKyD,SACtB1B,GAAa,QAEb,IAEJ,IAoBMG,EAAc,WAClB,OAAOlC,EAAKmC,KAAI,SAACC,GACf,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAACC,UAAU,QACxB,kBAACF,EAAA,EAAKG,OAAN,KAAcJ,EAAKtB,OACnB,kBAACuB,EAAA,EAAKI,KAAN,KAEE,kBAACJ,EAAA,EAAKK,KAAN,KACGN,EAAKrB,aAER,kBAAC,gBAAD,CAAe4B,GAAE,mBAAcP,EAAK7B,KAClC,kBAACqC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,mBASV,OAASf,EAgBP,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UACnC,0BAAMC,UAAU,WAAhB,eAhBE,kBAACC,EAAA,EAAD,CAAYZ,MAAO,CAACC,UAAU,QAC9B,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,qCACG9D,eAAeC,QAAQ,eACxB,oCAAE,kBAACqD,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,UAAUS,QAAS,WA7CzD3B,EAAM4B,QAAQC,KAAK,oBA6CX,OACDtB,MAIDA,U,QChBKR,mBAhDf,SAAyBC,GAAQ,IAAD,EACNC,mBAAS,IADH,mBACvB5B,EADuB,KACjB6B,EADiB,OAEID,oBAAS,GAFb,mBAEvBE,EAFuB,KAEZC,EAFY,KAI9BC,qBAAU,WACRrB,EAAYgB,EAAM+B,MAAMC,OAAOpD,IAAIT,MAAK,SAACC,GACvCI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKa,QACtBkB,GAAa,QAEd,IAEJ,IAMM6B,EAAqB,SAACrD,IHsFtB,SAAP,mCGpFEsD,CAAatD,GACXT,MAAK,SAACoB,GACNa,GAAa,GACbJ,EAAM4B,QAAQC,KAAK,eACjBvD,OAAM,SAACgB,GAAD,OAAWc,GAAa,OAGnC,OACG,kBAACmB,EAAA,EAAD,CAAWZ,MAAO,CAACC,UAAU,QAC3B,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACFtB,GAAe,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAClD,0BAAMC,UAAU,WAAhB,gBAED,kBAACa,EAAA,EAAD,KACC,4BAAK9D,EAAKc,OACV,2BAAId,EAAKe,aACT,2BACC,kBAAC6B,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,UAAUS,QAAS,WA1B5B,IAAC/C,IA0BoDP,EAAKO,GAzBlFoB,EAAM4B,QAAQC,KAAK,CAClBO,SAAS,YAAD,OAAcxD,EAAd,aAwBN,QADD,OAEC,kBAACqC,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,SAASS,QAAS,WAAQM,EAAmB5D,EAAKO,MAAhF,kB,gBCmCUmB,mBA1Ef,SAAyBC,GAAQ,IAAD,EACNC,mBAAS,CAC/BrB,GAAG,EACHQ,YAAY,GACZD,MAAM,KAJsB,mBACvBd,EADuB,KACjB6B,EADiB,OAMID,oBAAS,GANb,mBAMvBE,EANuB,KAMZC,EANY,OAOIH,oBAAS,GAPb,mBAOvBoC,EAPuB,KAOZC,EAPY,KAS9BjC,qBAAU,WACW,WAAfL,EAAMuC,KAIVvD,EAAYgB,EAAM+B,MAAMC,OAAOpD,IAAIT,MAAK,SAACC,GACvCI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKa,QACtBkB,GAAa,MANbA,GAAa,KAQd,IAEH,IAAMoC,EAAmB,SAAC5D,GAEL,WAAfoB,EAAMuC,KJ2GP,SAAP,kCI1GME,CAAapE,GACZF,MAAK,SAACoB,GACLa,GAAa,GACbJ,EAAM4B,QAAQC,KAAK,eAClBvD,OAAM,SAACgB,GAAD,OAAWc,GAAa,MJwFhC,SAAP,oCItFMsC,CAAa9D,EAAIP,GAChBF,MAAK,SAACoB,GACLa,GAAa,GACbJ,EAAM4B,QAAQC,KAAK,eAClBvD,OAAM,SAACgB,GAAD,OAAWc,GAAa,OAI/BuC,EAAc,SAAClD,GACnB,IAAMmD,EAAOnD,EAAMoD,OAAOD,KACpBE,EACkB,aAAtBrD,EAAMoD,OAAOnB,KAAsBjC,EAAMoD,OAAOE,QAAUtD,EAAMoD,OAAOC,MAEzE5C,EAAQ,eACH7B,EADE,eAEJuE,EAAOE,KAEVR,GAAa,IAGhB,OACG,kBAACf,EAAA,EAAD,CAAWZ,MAAO,CAACC,UAAU,QAC3B,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACEtB,GAAe,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAClD,0BAAMC,UAAU,WAAhB,gBAEF,kBAACa,EAAA,EAAD,KACE,wCAAoB,6BACpB,2BAAOT,KAAK,OAAOoB,MAAOzE,EAAKc,MAAOyD,KAAK,QAAQI,SAAUL,EAAahC,MAAO,CAACsC,MAAM,UAAW,6BACnG,8CAA0B,6BAC1B,8BAAUtC,MAAO,CAACuC,OAAO,OAAQD,MAAM,OAAQE,OAAO,QAASL,MAAOzE,EAAKe,YAAa4D,SAAUL,EAAaC,KAAK,gBACpH,6BACA,2BACA,kBAAC3B,EAAA,EAAD,CAAQmC,UAAWf,EAAWX,KAAK,SAASR,QAAQ,UAAUS,QAAS,WAAQa,EAAiBnE,EAAKO,MAArG,QADA,OAEA,kBAACqC,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,SAASS,QAAS,WAAQ3B,EAAM4B,QAAQyB,WAAtE,kB,0DCzDFC,G,cAAYC,YAAgBC,MAGrBC,GAAe,SAAAzD,GAAU,IAAD,EAEWC,mBAAS,GAFpB,mBAE3ByD,EAF2B,KAEXC,EAFW,OAGL1D,mBAAS,GAHJ,mBAG3B2D,EAH2B,KAGnBC,EAHmB,OAIT5D,mBAAS,CAACK,OAAO,KAJR,mBAI3BjC,EAJ2B,KAIrB6B,EAJqB,OAKDD,oBAAS,GALR,mBAK5BE,EAL4B,KAKjBC,EALiB,KASnCC,qBAAU,WACR7B,QAAQC,IAAI,YACZY,IAAclB,MAAK,SAAAC,GAGjB,GAFAI,QAAQC,IAAI,iBACZD,QAAQC,IAAIL,EAASC,KAAKiC,QACtBlC,EAASC,KAAM,CAEjB,IAAIA,EAAOD,EAASC,KACpB6B,EAAQ,CAACI,OAAOjC,EAAKiC,SAEvBF,GAAa,MACZ9B,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,QACzB,IAEH,IAkBcuF,EAVRC,EAAmB,WACvBJ,EAAkB,IA6CdK,EAAY,SAACpF,GACjB,OAAOP,EAAKiC,OAAO2D,MAAK,SAAAxD,GAAI,OAAIA,EAAK7B,KAAOA,MAI9C,OACIuB,EA+CD,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAChC,0BAAMC,UAAU,WAAhB,eA9CF,yBAAKX,MAAO,CAAEuC,OAAQ,IAAKgB,UAAW,IAAKC,QAAQ,SAGnD,kBAAC,IAAD,CACEb,UAAWA,EACXhD,OAAQjC,EAAKiC,OACb8D,cAAc,QACdC,YAAY,MACZ1D,MAAO,CAAEuC,OAAQ,KACjBoB,QAAQ,KACRC,YAAU,EACVC,cAAe,SAACV,EAAKvF,GAAN,OAzEA,SAACA,EAAGuF,GACrBtF,SAAWA,QAAQC,IAAIJ,GACvBwF,EAAUC,EAAIlF,IACd+E,EAAkB,GAElBnF,SAAWA,QAAQC,IAAIF,EAAGuF,GAoEEW,CAAWlG,EAAGuF,IACxCY,aApCiB,SAAC,GAAoB,IAAlBhF,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvBR,EAAQwF,OAAOC,OAAO,cACxBzF,GACFe,EAAQ,CACNI,OAAO,GAAD,mBACDjC,EAAKiC,QADJ,CAEJ,CACEZ,QACAC,MACAR,gBA6CR,kBAAC0F,EAAA,EAAD,CAAOC,KAAMpB,EAAgBqB,OAAQhB,GACnC,kBAACc,EAAA,EAAMhE,OAAP,CAAcmE,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,KAAcrB,GAAUI,EAAUJ,GAAQzE,QAE5C,kBAAC0F,EAAA,EAAM/D,KAAP,KAAa8C,IA9EHE,EA8EkBE,EAAUJ,GA1EjC,8CACE,kBAAC,IAAD,CAAUsB,WAAW,aAAapC,MAAOgB,EAAIpE,QAD/C,QAEA,kBAAC,IAAD,CAAUwF,WAAW,aAAapC,MAAOgB,EAAInE,SAyElD,kBAACkF,EAAA,EAAMM,OAAP,KACE,kBAAClE,EAAA,EAAD,CAAQC,QAAQ,YAAYS,QAASoC,GAArC,SAGA,kBAAC9C,EAAA,EAAD,CAAQC,QAAQ,UAAUS,QAAS,YAzFjB,SAACiC,GAEvBpE,EAAYwE,EAAUJ,IACtBD,EAAkB,GAsF6ByB,CAAgBxB,KAA3D,oBChJKyB,GAAgB,WAAO,IAAD,EAETpF,mBAAS,IAFA,mBAEpBC,GAFoB,aAGCD,oBAAS,GAHV,mBAG1BE,EAH0B,KAGfC,EAHe,KAcjC,OARAC,qBAAU,WACRtB,IAAeZ,MAAK,SAACC,GACnBI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKyD,SACtB1B,GAAa,QAEb,IAEKD,EAIP,yCAJoB,yBAAKQ,MAAO,CAAC2E,WAAW,OAAQ1E,UAAU,QAC9D,yCACA,uC,SC2DWb,gBAnEQ,SAACC,GAAW,IAAD,EAERC,mBAAS,IAFD,mBAEzB5B,EAFyB,KAEnB6B,EAFmB,OAGED,oBAAS,GAHX,mBAGzBE,EAHyB,KAGdC,EAHc,KAKhCC,qBAAU,YPqBL,WAAP,gCOpBIkF,GAAapH,MAAK,SAACC,GACjBI,QAAQC,IAAIL,GACZI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKmH,OACtBpF,GAAa,QAEb,IAUJ,OAAO,kBAACmB,EAAA,EAAD,CAAWZ,MAAO,CAACC,UAAU,QAChC,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACFtB,GAAe,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAClD,0BAAMC,UAAU,WAAhB,gBAED,oCAEC,wCAEC3D,eAAeC,QAAQ,eACvB,kBAACqD,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,UAAUS,QAAS,WAlBlD3B,EAAM4B,QAAQC,KAAK,kBAkBlB,OAED,kBAAC4D,GAAA,EAAD,CAAOC,YAAU,GACjB,+BACE,4BACE,iCACA,sCACA,yCAGJ,+BACCrH,EAAKmC,KAAI,SAACC,GACP,OAAO,4BACL,4BACCA,EAAK7B,IAEN,4BACC6B,EAAKkF,MADN,KACelF,EAAKmF,WADpB,IACiCnF,EAAKoF,WAEtC,4BACA,kBAAC5E,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,UAAUS,QAAS,WAnClC,IAAC/C,IAmCwD6B,EAAK7B,GAlCnFoB,EAAM4B,QAAQC,KAAd,gBAA4BjD,EAA5B,YAkCM,sBCwBKmB,oBA5Ef,SAAuBC,GAAQ,IAAD,EACJC,mBAAS,CAC/BrB,GAAG,EACHkH,SAAS,GACTH,MAAM,KAJoB,mBACrBtH,EADqB,KACf6B,EADe,OAMMD,oBAAS,GANf,mBAMrBE,EANqB,KAMVC,EANU,OAOMH,oBAAS,GAPf,mBAOrBoC,EAPqB,KAOVC,EAPU,KAS5BjC,qBAAU,WACW,WAAfL,EAAMuC,KR2BP,SAAP,kCQvBIwD,CAAU/F,EAAM+B,MAAMC,OAAOpD,IAAIT,MAAK,SAACC,GACrCI,QAAQC,IAAIL,EAASC,MACrB6B,EAAQ9B,EAASC,KAAKQ,MACtBuB,GAAa,MANbA,GAAa,KAQd,IAEH,IAAM4F,EAAiB,SAACpH,GACH,WAAfoB,EAAMuC,KR2BP,SAAP,kCQ1BM0D,CAAW5H,GACVF,MAAK,SAACoB,GACLa,GAAa,GACbJ,EAAM4B,QAAQC,KAAK,aAClBvD,OAAM,SAACgB,GAAD,OAAWc,GAAa,MRoChC,SAAP,oCQlCM8F,CAAWtH,EAAIP,GACdF,MAAK,SAACoB,GACLa,GAAa,GACbJ,EAAM4B,QAAQC,KAAK,aAClBvD,OAAM,SAACgB,GAAD,OAAWc,GAAa,OAI/BuC,EAAc,SAAClD,GACnB,IAAMmD,EAAOnD,EAAMoD,OAAOD,KACpBE,EACkB,aAAtBrD,EAAMoD,OAAOnB,KAAsBjC,EAAMoD,OAAOE,QAAUtD,EAAMoD,OAAOC,MAEzE5C,EAAQ,eACH7B,EADE,eAEJuE,EAAOE,KAGVR,GAAa,IAGhB,OACG,kBAACf,EAAA,EAAD,CAAWZ,MAAO,CAACC,UAAU,QAC3B,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACEtB,GAAe,kBAACgB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAClD,0BAAMC,UAAU,WAAhB,gBAEF,kBAACa,EAAA,EAAD,KACE,wCAAoB,6BACpB,2BAAOT,KAAK,OAAOoB,MAAOzE,EAAKsH,MAAO/C,KAAK,QAAQI,SAAUL,EAAahC,MAAO,CAACsC,MAAM,UAAW,6BAEnG,2CAAuB,6BACvB,2BAAOvB,KAAK,OAAOoB,MAAOzE,EAAKyH,SAAUlD,KAAK,WAAWI,SAAUL,EAAahC,MAAO,CAACsC,MAAM,UAAW,6BAEzG,6BACA,2BACA,kBAAChC,EAAA,EAAD,CAAQmC,UAAWf,EAAWX,KAAK,SAASR,QAAQ,UAAUS,QAAS,WAAQqE,EAAe3H,EAAKO,MAAnG,QADA,OAEA,kBAACqC,EAAA,EAAD,CAAQS,KAAK,SAASR,QAAQ,SAASS,QAAS,WAAQ3B,EAAM4B,QAAQyB,WAAtE,kB,SCzEK8C,I,OAAY,SAACnG,GAAW,IAAD,EAEVC,mBAAS,CAACmG,SAAS,GAAIT,MAAM,KAFnB,mBAE3BtH,EAF2B,KAErB6B,EAFqB,KAI5BmG,EAAe,SAAA9H,GACnB2B,EAAQ,eAAI7B,EAAL,eAAYE,EAAEsE,OAAOD,KAAOrE,EAAEsE,OAAOC,UA6B9C,OACE,yBAAKxB,UAAU,aACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,eAxBL,SAACtB,GACjB,OAAO,kBAACsG,GAAA,EAAD,CAAMC,SAAU,SAAChI,GAAD,OAAOyB,EAAMuG,SAAShI,EAAGF,KAC9C,kBAACiI,GAAA,EAAKE,MAAN,CAAYC,UAAU,kBACpB,kBAACH,GAAA,EAAKI,MAAN,sBACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcjF,KAAK,QAAQkB,KAAK,QAAQgE,YAAY,cAAe9D,MAAOzE,EAAKsH,MAAO3C,SAAU,SAACzE,GAAD,OAAO8H,EAAa9H,MACpH,kBAAC+H,GAAA,EAAKvF,KAAN,CAAWO,UAAU,cAArB,mDAKF,kBAACgF,GAAA,EAAKE,MAAN,CAAYC,UAAU,qBACpB,kBAACH,GAAA,EAAKI,MAAN,iBACA,kBAACJ,GAAA,EAAKK,QAAN,CAAcjF,KAAK,WAAWkB,KAAK,WAAYgE,YAAY,WAAW9D,MAAOzE,EAAK+H,SAAUpD,SAAU,SAACzE,GAAD,OAAO8H,EAAa9H,OAE5H,kBAAC0C,EAAA,EAAD,CAAQC,QAAQ,UAAUQ,KAAK,SAASJ,UAAU,aAAlD,WAWOuF,CAAU7G,SC3CV8G,GAAe,WAC1B,OAAO,yBAAKnG,MAAO,CAAC2E,WAAW,OAAQ1E,UAAU,QAC/C,+C,kBCwCWb,I,MAAAA,aAnCK,SAACC,GAEnB,OAAQ,oCACN,kBAAC+G,GAAA,EAAD,CAAQC,OAAO,MAAMC,GAAG,SAEtB,kBAACC,GAAA,EAAD,CAAK5F,UAAU,UAAUJ,QAAQ,SAC/B,kBAACgG,GAAA,EAAIC,KAAL,KACE,kBAAC,OAAD,CAAMnG,GAAG,YAAT,cAEF,kBAACkG,GAAA,EAAIC,KAAL,KACE,kBAAC,OAAD,CAAMnG,GAAG,aAAT,eAEF,kBAACkG,GAAA,EAAIC,KAAL,KACE,kBAAC,OAAD,CAAMnG,GAAG,WAAT,cAEDrD,eAAeC,QAAQ,eACxB,kBAACsJ,GAAA,EAAIC,KAAL,KACE,kBAAC,OAAD,CAAMnG,GAAG,UAAT,YAMJ,kBAACC,EAAA,EAAD,CAAQU,QAAS,SAACpD,GAAD,OAAOyB,EAAMoH,UAAU7I,IAAI2C,QAAQ,mBAApD,WAODlB,EAAMqH,cCkFIC,OAvGf,WAAgB,IAAD,EAEiCrH,oBAAS,GAF1C,mBAENsH,EAFM,KAEWC,EAFX,KAIbnH,qBAAU,WACM1C,eAAeC,QAAQ,UAEnC4J,GAAmB,KAGpB,CAACA,IAGJ,IAeMJ,EAAY,SAAC7I,GACjBA,EAAEkJ,iBACFjJ,QAAQC,IAAI,YZvBT,WAAP,+BYwBIiJ,GAAUvJ,MAAK,SAAAC,GAEboJ,GAAmB,GACnB7J,eAAegK,WAAW,YACzBrJ,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,OAG5B,OACIgJ,GACA,yBAAKjG,UAAU,SACd,kBAAC,GAAD,CAAWiF,SA5BC,SAAChI,EAAGF,GACnBE,EAAEkJ,iBZjBC,SAAP,kCYkBIG,CAAOvJ,GAAMF,MAAK,SAAAC,GAChBI,QAAQC,IAAIL,GACRA,GAAYA,EAASyJ,aACvBL,GAAmB,GAEnB7J,eAAemK,QAAQ,QAAS1J,EAASC,KAAKQ,KAAKkJ,sBACnDpK,eAAemK,QAAQ,YAAa1J,EAASC,KAAK2J,WAClDrK,eAAemK,QAAQ,aAAc1J,EAASC,KAAK4J,gBAGpD3J,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAIF,WAmB3B,kBAAC,gBAAD,KACG,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,KACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,GAAD,QAGH,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,WACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,EAAD,QAGH,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,YACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,EAAD,QAGH,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,qBACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,EAAD,QAGH,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,mBACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,EAAD,CAAiB7E,KAAK,aAGzB,kBAAC,IAAD,CAAO2F,OAAK,EAACC,KAAK,gBACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,EAAD,QAGH,kBAAC,IAAD,CAAOe,KAAK,aACX,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,GAAD,QAGH,kBAAC,IAAD,CAAOe,KAAK,UACX,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,GAAD,QAGH,kBAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,mBACjB,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,GAAD,QAGH,kBAAC,IAAD,CAAOe,KAAK,iBACX,kBAAC,GAAD,CAAaf,UAAWA,GACtB,kBAAC,GAAD,CAAe7E,KAAK,aAGvB,kBAAC,IAAD,CAAO4F,KAAK,QAAQC,UAAWtB,KAC/B,kBAAC,IAAD,CAAU9F,GAAG,aCvGAqH,QACW,cAA7B1D,OAAO2D,SAASC,UAEe,UAA7B5D,OAAO2D,SAASC,UAEhB5D,OAAO2D,SAASC,SAASxG,MACvB,2D,OCPNyG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5K,MAAK,SAAA6K,GACJA,EAAaC,gBAEd3K,OAAM,SAAAgB,GACLd,QAAQc,MAAMA,EAAM4J,a","file":"static/js/main.a59f6902.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_HOST\n\nconst getToken = () => {\n  return sessionStorage.getItem('token')\n}\n\n//#region session\n\n/**\n * sign_in\n   curl -XPOST -v -H 'Content-Type: application/json' http://localhost:3000/api/v1/sign_in -d '{\"sign_in\": {\"email\": \"email@example.com\", \"password\": \"admin1\"}}'\n *\n */\nexport async function signIn(signInData) {\n  const url = `${API_URL}/sign_in`\n  return await axios.post(url, {\n      sign_in: signInData\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function signOut() {\n  const url = `${API_URL}/sign_out`\n  return await axios.post(url).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n//#endregion\n\n//#region users\n\nexport async function fetchUsers() {\n  const url = `${API_URL}/users`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchUser(id) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createUser(data) {\n  const url = `${API_URL}/users`\n  return await axios.post(url, {\n    user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function updateUser(id, data) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.put(url, {\n      user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n//#endregion\n\n//#region courses\n\nexport async function fetchCourses() {\n  const url = `${API_URL}/courses`\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function deleteCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.delete(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n    .catch (e => {\n      console.log(`request failed: ${e}`);\n    })\n}\n\nexport async function updateCourse(id, data) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.put(url, {\n      course: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createCourse(data) {\n  // const course = data.data\n  console.log(data)\n  const url = `${API_URL}/courses`\n  return await axios.post(url, {\n    course:{title: data.title, description: data.description, },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n\n//#endregion\n\n\n//#region events\n\n\nexport const fetchEvents = async () => {\n  let data = {}\n  const result = await axios.get(`${API_URL}/events`, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  })\n  .then(response => {\n    console.log('response:')\n    console.log(response)\n    data = response.data\n    return data\n  }).catch(error => console.log(error))\n  return result\n}\n\nexport async function createEvent(data) {\n  const url = `${API_URL}/events`\n  return await axios.post(url, {\n    event:{\n      start: data.start,\n      end: data.end,\n      title: data.title,\n      courses_id: (typeof data.coursesId !== 'undefined') ? Number(data.coursesId) : null,\n    },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n\nexport const updateEvent = async (id, data) => {\n  const url = `${API_URL}/events/${id}`\n  return await axios.put(url, {\n    event:{\n      start: data.start,\n      end: data.end,\n      title: data.title,\n      courses_id: (typeof data.coursesId !== 'undefined') ? Number(data.coursesId) : null,\n    },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n\n}\n\n/*\nexport const updateEvent = async (eventData) => {\n  // const response = await fetch(`${API_URL}/events/`, {\n  await fetch(`${API_URL}/events/`, {\n    method: \"patch\",\n    credentials: \"include\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  }).then(function(response) {\n      return response.json();\n  }).then(function(data) {\n      console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n      console.log(\"parsing failed\", ex);\n  })\n}\n*/\n//#endregion\n\n/**\n * sign_in\n   curl -XPOST -v -H 'Content-Type: application/json' http://localhost:3000/api/v1/sign_in -d '{\"sign_in\": {\"email\": \"email@example.com\", \"password\": \"admin1\"}}'\n *\n *\nexport const signIn = async (signInData) => {\n  const response = await fetch(`${API_URL}/sign_in`, {\n    method: \"post\",\n    // credentials: \"include\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(signInData)\n  }).then(function(response) {\n    return response.json();\n  }).then(function(data) {\n    console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n    console.log(\"parsing failed\", ex);\n  })\n\n}\n\nconst createEvent = async (eventData) => {\n  const response = await fetch(`${API_URL}/events/`, {\n    method: \"put\",\n    credentials: \"include\",\n    headers: {\n      \"X-CSRFToken\": getCookie(\"csrftoken\"),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  }).then(function(response) {\n      return response.json();\n  }).then(function(data) {\n      console.log(\"Data is ok\", data);\n  }).catch(function(ex) {\n      console.log(\"parsing failed\", ex);\n  })\n}\n\n\n\n*/\n\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport { withRouter } from 'react-router-dom'\n\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { fetchEvents } from '../../api'\n\nconst EventsIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEvents().then((response)=>{\n      console.log(response.data)\n      setData(response.data.events)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddCourse = () => {\n    props.history.push('events/create')\n  }\n\n  /*\n  const list = () => {\n    return data.map((item)=>{\n      return (\n        <ul>\n          <li>\n        <LinkContainer to={`/events/${item.id}`}>\n          <h2 key={item.id}>{item.title}</h2>\n        </LinkContainer>\n          </li>\n        </ul>\n      )\n    })\n  }\n  */\n\n  const listAsCards = () => {\n    return data.map((item)=>{\n      return (\n        <Card style={{marginTop:'4px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Body>\n          {/* <Card.Title>{item.title}</Card.Title> */}\n          <Card.Text>\n            {item.description}\n          </Card.Text>\n          <LinkContainer to={`/events/${item.id}`}>\n            <Button variant=\"primary\">mehr ...</Button>\n          </LinkContainer>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n      )\n    })\n  }\n\n  return (!isLoading) ?\n    <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>Termine</h1>\n        {((sessionStorage.getItem('admin_role')) && (\n          <><Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>\n          {listAsCards()}\n          </>\n        )) || (\n          listAsCards()\n        )}\n        </Col>\n      </Row>\n    </Container>\n  : <Spinner animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n </Spinner>\n}\n\nexport default withRouter(EventsIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport { withRouter } from 'react-router-dom'\n\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { fetchCourses } from '../../api'\n\nconst CoursesIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCourses().then((response)=>{\n      console.log(response.data)\n      setData(response.data.courses)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddCourse = () => {\n    props.history.push('courses/create')\n  }\n\n  /*\n  const list = () => {\n    return data.map((item)=>{\n      return (\n        <ul>\n          <li>\n        <LinkContainer to={`/courses/${item.id}`}>\n          <h2 key={item.id}>{item.title}</h2>\n        </LinkContainer>\n          </li>\n        </ul>\n      )\n    })\n  }\n  */\n\n  const listAsCards = () => {\n    return data.map((item)=>{\n      return (\n        <Card style={{marginTop:'4px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Body>\n          {/* <Card.Title>{item.title}</Card.Title> */}\n          <Card.Text>\n            {item.description}\n          </Card.Text>\n          <LinkContainer to={`/courses/${item.id}`}>\n            <Button variant=\"primary\">mehr ...</Button>\n          </LinkContainer>\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n      )\n    })\n  }\n\n  return (!isLoading) ?\n    <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>Kurse</h1>\n        {((sessionStorage.getItem('admin_role')) && (\n          <><Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>\n          {listAsCards()}\n          </>\n        )) || (\n\n          listAsCards()\n        )}\n        </Col>\n      </Row>\n    </Container>\n  : <Spinner animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n </Spinner>\n}\n\nexport default withRouter(CoursesIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchCourse,  deleteCourse } from '../../api'\n\nfunction CoursesShowPage(props) {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCourse(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.course)\n      setIsLoading(false)\n    })\n  }, []);\n\n const handleEditCourse = (id) => {\n  props.history.push({\n   pathname: `/courses/${id}/edit`\n  });\n };\n\n const handleDeleteCourse = (id) => {\n  // const course = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n  deleteCourse(id)\n   .then((result) => {\n    setIsLoading(false);\n    props.history.push('/courses')\n   }).catch((error) => setIsLoading(false));\n };\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <Jumbotron>\n    <h2>{data.title}</h2>\n    <p>{data.description}</p>\n    <p>\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditCourse(data.id) }}>Edit</Button>&nbsp;\n     <Button type=\"button\" variant=\"danger\" onClick={() => { handleDeleteCourse(data.id) }}>Delete</Button>\n    </p>\n   </Jumbotron>)}\n  </Col>\n  </Row>\n  </Container>\n );\n}\n\nexport default withRouter(CoursesShowPage);","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchCourse, updateCourse, createCourse } from '../../api'\n\nfunction CoursesEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    description:'',\n    title:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchCourse(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.course)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleSaveCourse = (id) => {\n    // const course = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n    if (props.mode === 'create') {\n      createCourse(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateCourse(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>title</label><br/>\n        <input type=\"text\" value={data.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n        <label>description</label><br/>\n        <textarea style={{height:'10em', width:'100%', border:'none'}} value={data.description} onChange={handleInput} name=\"description\" ></textarea>\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveCourse(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(CoursesEditPage)","import React, {useState, useEffect} from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport moment from 'moment'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Datetime from 'react-datetime'\nimport Spinner from 'react-bootstrap/Spinner'\nimport { fetchEvents, updateEvent } from '../api'\nimport 'react-datetime/css/react-datetime.css'\n\nimport 'react-big-calendar/lib/sass/styles.scss'\n// import 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\n\nconst resourceMap = [\n  { resourceId: 1, resourceTitle: 'Großer Raum' },\n  { resourceId: 2, resourceTitle: 'Kleiner Raum' },\n  { resourceId: 3, resourceTitle: 'Raum Oben' },\n  // { resourceId: 4, resourceTitle: 'Raum 4' },\n]\n\nconst localizer = momentLocalizer(moment)\n\n\nexport const CalendarPage = props => {\n\n  const [ isModalVisible, setIsModalVisible ] = useState(0)\n  const [ dataId, setDataId ] = useState(0)\n  const [ data, setData ] = useState({events:[]})\n  const [isLoading, setIsLoading] = useState(true);\n\n  // const allViews = Object.keys(BigCalendar.Views).map(k => BigCalendar.Views[k])\n\n  useEffect(() => {\n    console.log(\"Calendar\")\n    fetchEvents().then(response => {\n      console.log('response.data')\n      console.log(response.data.events)\n      if (response.data) {\n        // let data = convertDates(response.data)\n        let data = response.data\n        setData({events:data.events})\n      }\n      setIsLoading(false)\n    }).catch(e => console.log(e))\n  }, [])\n\n  const showEvtDia = (e, evt) => {\n    console && console.log(data)\n    setDataId(evt.id)\n    setIsModalVisible(1)\n    // isModalVisible,\n    console && console.log(e, evt)\n  }\n\n  const handleCloseModal = () => {\n    setIsModalVisible(0)\n  }\n\n  const handleSaveModal = (dataId) => {\n    // console.log(eventById(dataId))\n    updateEvent(eventById(dataId))\n    setIsModalVisible(0)\n  }\n\n  const form = (evt) => {\n    // return evt.start\n    // console.log(evt.start) evt.start.toString()\n    // resourceMap.map()\n    return <>\n      Start: <Datetime dateFormat=\"DD.MM.YYYY\" value={evt.start}  />\n      End: <Datetime dateFormat=\"DD.MM.YYYY\" value={evt.end}  />\n      {/*\n      Raum: <select>\n      {resourceMap.map((room) => {\n        return (evt.resourceId !== room.resourceId) ?\n        <option value={room.resourceId}>{room.resourceTitle}</option>\n        :\n        <option selected value={room.resourceId}>{room.resourceTitle}</option>\n      })\n      }</select>\n       */}\n    </>\n  }\n\n  const handleSelect = ({ start, end }) => {\n    const title = window.prompt('Event name')\n    if (title)\n      setData({\n        events: [\n          ...data.events,\n          {\n            start,\n            end,\n            title,\n          },\n        ],\n      })\n  }\n\n\n  const eventById = (id) => {\n    return data.events.find(item => item.id === id)\n  }\n\n  // (typeof data.events.results !== 'undefined') ?\n  return (\n    (!isLoading) ?\n    // parent container of calendar-month-view requires a min-height\n    <div style={{ height: 700, minHeight: 400, padding:'10px' }}>\n\n\n    <Calendar\n      localizer={localizer}\n      events={data.events}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n      culture='de'\n      selectable\n      onSelectEvent={(evt, e)=> showEvtDia(e, evt)}\n      onSelectSlot={handleSelect}\n    />\n\n\n      {/* <BigCalendar\n\n        events={data.events.results}\n        // views={allViews}\n        step={60}\n        showMultiDayTimes\n        defaultDate={new Date()}\n        localizer={localizer}\n        resources={resourceMap}\n        resourceIdAccessor=\"resourceId\"\n        resourceTitleAccessor=\"resourceTitle\"\n        onSelectEvent={(evt, e)=> showEvtDia(e, evt)}\n        /> */}\n\n    <Modal show={isModalVisible} onHide={handleCloseModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{dataId && eventById(dataId).title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{dataId && form(eventById(dataId))}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => { handleSaveModal(dataId) }} >\n          Save Changes\n        </Button>\n      </Modal.Footer>\n      </Modal>\n    </div>\n   : <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { fetchCourses } from '../api'\n\nexport const DashboardPage = () => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n\n  useEffect(() => {\n    fetchCourses().then((response)=>{\n      console.log(response.data)\n      setData(response.data.courses)\n      setIsLoading(false)\n    })\n   }, []);\n\n  return (!isLoading) ? <div style={{background:'#fff', marginTop:'2em'}}>\n    <h1>Dashboard</h1>\n    <p>Hallo!</p>\n  </div>\n  : <p>Loading...</p>\n\n}","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUsers } from '../../api'\n\nconst UsersIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchUsers().then((response)=>{\n      console.log(response)\n      console.log(response.data)\n      setData(response.data.users)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddUser = () => {\n    props.history.push('users/create')\n  }\n\n  const handleEditUser = (id) => {\n    props.history.push(`users/${id}/edit`)\n  }\n\n  return <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <>\n\n    <h1>Benutzer</h1>\n\n    {sessionStorage.getItem('admin_role') &&\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleAddUser() }}>Add</Button>\n    }\n    <Table responsive>\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>E-Mail</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n    {data.map((item)=>{\n        return <tr>\n          <td>\n          {item.id}\n          </td>\n          <td>\n          {item.email}  {item.first_name} {item.last_name}\n          </td>\n          <td>\n          <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditUser(item.id) }}>Edit</Button>\n          </td>\n        </tr>\n      } )}\n      </tbody>\n    </Table>\n   </>)}\n  </Col>\n  </Row>\n  </Container>\n\n}\n\n\nexport default withRouter(UsersIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUser, updateUser, createUser } from '../../api'\n\nfunction UsersEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    username:'',\n    email:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchUser(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.user)\n      setIsLoading(false)\n    })\n  }, []);\n\n  const handleSaveUser = (id) => {\n    if (props.mode === 'create') {\n      createUser(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateUser(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    // console.log(data)\n    setIsMutated(true)\n  }\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>email</label><br/>\n        <input type=\"text\" value={data.email} name=\"email\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n        <label>username</label><br/>\n        <input type=\"text\" value={data.username} name=\"username\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveUser(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(UsersEditPage)","import React, {useState} from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nimport \"../assets/sass/login.sass\";\n\nexport const LoginPage = (props) => {\n\n  const [data, setData] = useState({password:'', email:''});\n\n  const handleChange = e => {\n    setData({...data, [e.target.name]: e.target.value })\n  }\n\n  // const handleKeyPress = e => {\n  //   if (e.keyCode === 13 || e.which === 13) {\n  //     isButtonDisabled || handleSubmit();\n  //   }\n  // }\n\n  const loginForm = (props) => {\n    return <Form onSubmit={(e) => props.onSubmit(e, data)}>\n      <Form.Group controlId=\"formBasicEmail\">\n        <Form.Label>Email address</Form.Label>\n        <Form.Control type=\"email\" name=\"email\" placeholder=\"Enter email\"  value={data.email} onChange={(e) => handleChange(e)}  />\n        <Form.Text className=\"text-muted\">\n          We'll never share your email with anyone else.\n        </Form.Text>\n      </Form.Group>\n\n      <Form.Group controlId=\"formBasicPassword\">\n        <Form.Label>Password</Form.Label>\n        <Form.Control type=\"password\" name=\"password\"  placeholder=\"Password\" value={data.password} onChange={(e) => handleChange(e)} />\n      </Form.Group>\n      <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\n        Submit\n      </Button>\n    </Form>\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center h-100\">\n        <div className=\"card zoomInUp animated\">\n          <div className=\"card-header\">\n            {loginForm(props)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return <div style={{background:'#fff', marginTop:'2em'}}>\n    <h1>404 Not Found</h1>\n  </div>\n}\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from 'react-router-dom'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport '../assets/sass/main.sass';\n\nconst LayoutAdmin = (props) => {\n\n  return (<>\n    <Navbar sticky=\"top\" bg=\"light\">\n      {/* <Navbar.Brand href=\"/\">::</Navbar.Brand> */}\n      <Nav className=\"mr-auto\" variant=\"pills\" >\n        <Nav.Item>\n          <Link to=\"/courses\"> Courses </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/calendar\"> Calendar </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/events\"> Termine </Link>\n        </Nav.Item>\n        {sessionStorage.getItem('admin_role') && (\n        <Nav.Item>\n          <Link to=\"/users\"> Users</Link>\n        </Nav.Item>\n        )}\n      </Nav>\n\n      {/* <Nav.Item onClick={props.doSignOut}>Logout</Nav.Item> */}\n      <Button onClick={(e) => props.doSignOut(e)} variant=\"outline-primary\">Logout</Button>\n      {/* <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-info\">Search</Button>\n      </Form> */}\n    </Navbar>\n\n    {props.children}\n\n  </>)\n}\n\nexport default withRouter(LayoutAdmin);","import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Redirect\n} from \"react-router-dom\";\n\nimport EventsIndexPage from './components/Events/EventsIndexPage';\nimport CoursesIndexPage from './components/Courses/CoursesIndexPage';\nimport CoursesShowPage  from './components/Courses/CoursesShowPage';\nimport CoursesEditPage  from './components/Courses/CoursesEditPage';\nimport { CalendarPage } from './components/CalendarPage';\nimport { DashboardPage } from './components/DashboardPage';\nimport UsersIndexPage from './components/Users/UsersIndexPage';\nimport UsersEditPage from './components/Users/UsersEditPage';\nimport { LoginPage } from './components/LoginPage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport LayoutAdmin  from './components/LayoutAdmin';\nimport { signIn, signOut } from './api'\n\nfunction App() {\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(()=>{\n    const token = sessionStorage.getItem('token')\n    if (token)\n      setIsAuthenticated(true)\n      // meFromToken(at)\n      // .then((resp) => setIsAuthenticated(resp))\n  }, [setIsAuthenticated])\n\n\n  const doSignIn = (e, data) => {\n    e.preventDefault()\n    signIn(data).then(response => {\n      console.log(response)\n      if (response && response.is_success) {\n        setIsAuthenticated(true)\n        // user.authentication_token\n        sessionStorage.setItem('token', response.data.user.authentication_token)\n        sessionStorage.setItem('user_role', response.data.user_role)\n        sessionStorage.setItem('admin_role', response.data.admin_role)\n        // sessionStorage.setItem('supervisor_role', response.data.supervisor_role)\n      }\n    }).catch(e => console.log(e))\n  }\n\n  const doSignOut = (e) => {\n    e.preventDefault()\n    console.log(\"sign out\")\n    signOut().then(response => {\n      // console.log(response)\n      setIsAuthenticated(false)\n      sessionStorage.remotItemt('token')\n    }).catch(e => console.log(e))\n  }\n\n  return (\n    (!isAuthenticated && (\n      <div className=\"login\">\n       <LoginPage onSubmit={doSignIn} />\n     </div>\n   )) || (\n   <Router>\n      <Switch>\n       <Route exact path=\"/\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <DashboardPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <EventsIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/create\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CoursesShowPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/calendar\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <CalendarPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/users/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users/create\">\n        <LayoutAdmin doSignOut={doSignOut}>\n          <UsersEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/oops\" component={NotFoundPage} />\n       <Redirect to='/oops' />\n    </Switch>\n    </Router>)\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nimport \"./assets/sass/main.sass\";\nimport \"./assets/css/animate.min.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}