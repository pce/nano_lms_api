{"version":3,"sources":["services.js","utils.js","components/Events/EventsIndexPage.js","components/Events/EventsEditPage.js","components/Events/EventsShowPage.js","components/Events/Pdf/Schedule.js","components/Events/Pdf/Doc.js","components/Events/EventsPrintPage.js","components/Courses/CoursesIndexPage.js","components/Courses/CoursesShowPage.js","components/Courses/CoursesEditPage.js","components/CalendarPage.js","components/DashboardPage.js","components/Users/UsersIndexPage.js","components/Users/UsersEditPage.js","components/LoginPage.js","components/NotFoundPage.js","components/LayoutAdmin.js","App.js","serviceWorker.js","i18n.js","index.js"],"names":["API_URL","process","getToken","sessionStorage","getItem","signInData","a","url","axios","post","sign_in","then","response","data","catch","e","console","log","get","headers","id","user","put","fetchCourses","page","fetchCourse","delete","course","title","description","fetchEvent","fetchEvents","orderBy","orderDir","courseIds","q","length","join","error","result","fetchEventsInRange","start","end","createEvent","format","courses_id","coursesId","Number","updateEvent","event","course_id","courseId","formatDateRange","startDate","moment","Date","endDate","withRouter","props","useState","setData","isLoading","setIsLoading","setOrderDir","setOrderBy","isFilterVisible","setIsFilterVisible","setCourseIds","courses","setCourses","useEffect","events","handleSort","col","isAdmin","Spinner","animation","role","className","Container","style","marginTop","Row","Col","Button","type","variant","onClick","history","push","float","backgroundColor","padding","size","multiple","value","onChange","newVal","target","_courseIds","indexOf","splice","name","map","val","Table","striped","bordered","hover","item","dateOfEvent","String","cursor","to","key","pathname","isMutated","setIsMutated","mode","match","params","handleInputDate","handleInput","checked","Jumbotron","width","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","disabled","goBack","handleDeleteEvent","deleteEvent","window","confirm","styles","StyleSheet","create","flexDirection","marginBottom","itemDatetime","marginRight","fontSize","itemTitle","flex","Item","datetime","Schedule","children","section","margin","flexGrow","text","EventEntries","i","Doc","wrap","orientation","location","height","minHeight","URLSearchParams","useLocation","search","pagerItems","Array","pager","last","fill","responsive","Pagination","First","href","prev","Prev","active","next","Next","Last","handleDeleteCourse","deleteCourse","Card","Header","Body","Text","handleSaveCourse","createCourse","updateCourse","border","localizer","momentLocalizer","CalendarPage","isModalVisible","setIsModalVisible","isModalCreateVisible","setIsModalCreateVisible","dataId","setDataId","dateRange","setDateRange","newEvt","setNewEvt","convertDates","k","v","reviver","toISOString","startOf","subtract","endOf","add","evt","handleCloseModal","eventById","find","defaultDate","startAccessor","endAccessor","culture","selectable","onSelectEvent","showEvtDia","onSelectSlot","showCreateEvtDia","onRangeChange","Modal","show","onHide","closeButton","Title","Footer","handleSaveUpdateModal","alert","DashboardPage","fetchUsers","users","email","first_name","last_name","username","fetchUser","handleSaveUser","myObj","deleteKey","createUser","Object","keys","filter","reduce","current","updateUser","password","password_confirmation","LoginPage","initialValues","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","isSubmitting","Form","Group","controlId","Label","component","NotFoundPage","background","Navbar","sticky","bg","Nav","changeLanguage","doSignOut","App","useTranslation","t","i18n","code","isAuthenticated","setIsAuthenticated","preventDefault","signOut","removeItem","signIn","is_success","setItem","authentication_token","Boolean","user_role","admin_role","err","exact","path","hostname","use","initReactI18next","init","resources","en","translation","de","ja","lng","fallbackLng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.786f8c27.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst API_URL = process.env.REACT_APP_API_HOST\n\nconst getToken = () => {\n  return sessionStorage.getItem('token')\n}\n\n//#region session\n\n/**\n * sign_in\n   curl -XPOST -v -H 'Content-Type: application/json' http://localhost:3000/api/v1/sign_in -d '{\"sign_in\": {\"email\": \"email@example.com\", \"password\": \"admin1\"}}'\n *\n */\nexport async function signIn(signInData) {\n  const url = `${API_URL}/sign_in`\n  return await axios.post(url, {\n      sign_in: signInData\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function signOut() {\n  const url = `${API_URL}/sign_out`\n  return await axios.post(url).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n//#endregion\n\n//#region users\n\nexport async function fetchUsers() {\n  const url = `${API_URL}/users`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchUser(id) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createUser(data) {\n  const url = `${API_URL}/users`\n  return await axios.post(url, {\n    user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function updateUser(id, data) {\n  const url = `${API_URL}/users/${id}`\n  return await axios.put(url, {\n      user: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n//#endregion\n\n//#region courses\n\nexport async function fetchCourses(page=1) {\n  let url = `${API_URL}/courses?`\n  if (null !== page) {\n    url += `page=${page}`\n  }\n  return await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function fetchCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function deleteCourse(id) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.delete(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n    .catch (e => {\n      console.log(`request failed: ${e}`);\n    })\n}\n\nexport async function updateCourse(id, data) {\n  const url = `${API_URL}/courses/${id}`\n  return await axios.put(url, {\n      course: data\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport async function createCourse(data) {\n  // const course = data.data\n  console.log(data)\n  const url = `${API_URL}/courses`\n  return await axios.post(url, {\n    course:{title: data.title, description: data.description, },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\n\n//#endregion\n\n//#region events\n\nexport async function fetchEvent(id) {\n  const url = `${API_URL}/events/${id}`\n  return await axios.get(url,  {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport const fetchEvents = async (orderBy=\"start\", orderDir=true, courseIds=null, q=null) => {\n  // console.log('@fetchEvents courseIds:')\n  // console.log(courseIds)\n  let data = {}\n  let url = `${API_URL}/events?`\n  if (orderBy) url += `order_by=${orderBy}&order_dir=${orderDir?'desc':'asc'}`\n  if (courseIds && courseIds.length) url += `&c[]=${courseIds.join('&c[]=')}`\n  if (q) url += `&q=${q}`\n  const result = await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  })\n  .then(response => {\n    // console.log('response:')\n    // console.log(response)\n    data = response.data\n    return data\n  }).catch(error => console.log(error))\n  return result\n}\n\nexport const fetchEventsInRange = async (start=null, end=null) => {\n  console.log('@fetchEventsInRange:')\n  console.log(start, end)\n  let data = {}\n  let url = `${API_URL}/events?`\n  if (start && end) url += `&start=${start}&end=${end}`\n  const result = await axios.get(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  })\n  .then(response => {\n    // console.log('response:')\n    // console.log(response)\n    data = response.data\n    return data\n  }).catch(error => console.log(error))\n  return result\n}\n\nexport async function createEvent(data) {\n  // console.log(data)\n  const url = `${API_URL}/events`\n  // moment or not ...\n  if (typeof data.start.format === 'function') {\n    data.start = data.start.format()\n  }\n  if (typeof data.end.format === 'function') {\n    data.end = data.end.format()\n  }\n\n  return await axios.post(url, {\n      start: data.start,\n      end: data.end,\n      title: data.title,\n      courses_id: (typeof data.coursesId !== 'undefined') ? Number(data.coursesId) : null,\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n}\n\nexport const updateEvent = async (id, data) => {\n  const url = `${API_URL}/events/${id}`\n  return await axios.put(url, {\n    event:{\n      start: data.start,\n      end: data.end,\n      title: data.title,\n      course_id: (typeof data.courseId !== 'undefined') ? Number(data.courseId) : null,\n    },\n  }, {\n    headers: {\n      'AUTH-TOKEN': getToken(),\n      \"Accept\": \"application/json\",\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => response.data)\n  .catch (e => {\n    console.log(`request failed: ${e}`);\n  })\n\n}\n\nexport async function deleteEvent(id) {\n  const url = `${API_URL}/events/${id}`\n  return await axios.delete(url, {\n    headers: {\n      'AUTH-TOKEN': getToken()\n    }\n  }).then(response => response.data)\n    .catch (e => {\n      console.log(`request failed: ${e}`);\n    })\n}\n\n//#endregion\n","import moment from 'moment'\n\n\nexport function formatDateRange(start, end) {\n  let startDate = moment(new Date(start))\n  let endDate = moment(new Date(end))\n  if (startDate.format('DDMMY') === endDate.format('DDMMY')) {\n    return `${startDate.format('DD.MM.Y')}  ${startDate.format('HH:mm')} - ${endDate.format('HH:mm')}`\n  }\n  return `${startDate.format('DD.MM.Y')}  ${startDate.format('HH:mm')} - ${endDate.format('HH:mm')} (${endDate.format('DD.MM.Y')})`\n}\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport { withRouter } from 'react-router-dom'\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { Link } from \"react-router-dom\"\n\nimport { fetchEvents, fetchCourses } from '../../services'\nimport {formatDateRange } from '../../utils'\n\n\nconst EventsIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [orderDir, setOrderDir] = useState(true)\n  const [orderBy, setOrderBy] = useState('start')\n  const [isFilterVisible, setIsFilterVisible] = useState(false);\n  const [courseIds, setCourseIds] = useState([])\n  const [courses, setCourses] = useState([])\n\n  useEffect(() => {\n    fetchCourses(null).then((response) => {\n      // console.log(response.data)\n      setCourses(response.data.courses)\n    })\n  }, []);\n\n\n  useEffect(() => {\n    setIsLoading(true)\n    fetchEvents(orderBy, orderDir, courseIds).then((response)=>{\n      // console.log(response.data)\n      setData(response.data.events)\n      setIsLoading(false)\n    })\n  }, [orderBy, orderDir, courseIds]);\n\n  const handleSort = (col) => {\n    setOrderDir(!orderDir)\n    setOrderBy(col)\n  }\n\n  const handleAddCourse = () => {\n    props.history.push('events/create')\n  }\n\n  const handleSelectCourses = (e) => {\n    let newVal = e.target.value\n    let _courseIds = [...courseIds]\n    if (_courseIds.indexOf(newVal) === -1) {\n      _courseIds.push(newVal)\n    } else {\n      if (_courseIds.length === 1) {\n        _courseIds = []\n      } else {\n        _courseIds.splice(_courseIds.indexOf(newVal), 1)\n      }\n    }\n    // setFilterQueue -> onApply:\n    setCourseIds(_courseIds)\n  }\n\n  const isAdmin = (sessionStorage.getItem('admin_role') === 'true');\n\n  return (!isLoading) ?\n    <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>Termine</h1>\n        <Row>\n          <Col>\n            {(isAdmin && (<Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>))}\n          </Col>\n          <Col>\n            <Button type=\"button\" variant=\"secondary\" onClick={() => { setIsFilterVisible(!isFilterVisible) }} style={{float:'right'}}>Filter </Button>\n          </Col>\n        </Row>\n\n        {isFilterVisible && (\n          <Row style={{backgroundColor:'#eff', padding:'10px'}}>\n          <Col>\n          <label>Kurs</label><br/>\n          <select size='7' multiple value={courseIds} onChange={handleSelectCourses} name=\"courseIds\" >\n            <option value=\"nil\">--</option>\n            {courses.map((val) => <option value={val.id}  >{val.title}</option>)}\n          </select>\n          </Col>\n        </Row>\n        )}\n\n        <Table striped bordered hover size=\"sm\" style={{marginTop:'8px'}}>\n        <thead>\n          <tr>\n            {/* <th>#</th> */}\n            <th onClick={() => handleSort('title')}  >{orderBy==='title' && (orderDir?'▲':'▼')}  Name  </th>\n            <th onClick={() => handleSort('start')}  >{orderBy==='start' && (orderDir?'▲':'▼')}  Datum </th>\n            <th onClick={() => handleSort('course_id')} >{orderBy==='course_id' && (orderDir?'▲':'▼')}  Kurs</th>\n          </tr>\n        </thead>\n        <tbody>\n        {data.map((item)=>{\n          const dateOfEvent = String(formatDateRange(item.start, item.end))\n          console.log(dateOfEvent)\n            return (\n              <tr style={{cursor:\"pointer\"}}>\n                <td>\n                  <LinkContainer to={`/events/${item.id}`}>\n                    <h2 key={item.id}  >{item.title}</h2>\n                  </LinkContainer>\n                </td>\n                <td>\n                {dateOfEvent}\n                </td>\n                <td>\n                {item.course && item.course.title}\n                </td>\n              </tr>\n            )\n          })\n          }\n          </tbody>\n        </Table>\n        </Col>\n      </Row>\n      <Link to={{\n        pathname: \"/pdf/events\",\n        data: data,\n        }}\n      > PDF </Link>\n    </Container>\n  : <Spinner animation=\"border\" role=\"status\">\n  <span className=\"sr-only\">Loading...</span>\n </Spinner>\n}\n\nexport default withRouter(EventsIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport DatePicker from \"react-datepicker\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchEvent, updateEvent, createEvent, fetchCourses } from '../../services'\n\n\nfunction EventsEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    start:'',\n    end:'',\n    title:''\n  })\n  const [courses, setCourses] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchEvent(props.match.params.id).then((response)=>{\n      console.log(response.data)\n\n      response.data.event.start = new Date(response.data.event.start)\n      response.data.event.end = new Date(response.data.event.end)\n\n      setData(response.data.event)\n      setIsLoading(false)\n    })\n    fetchCourses(null).then((response) => {\n      // console.log(response.data)\n      setCourses(response.data.courses)\n      setIsLoading(false)\n    })\n  }, [props.match.params.id, props.mode]);\n\n  const handleSaveEvent = (id) => {\n    if (props.mode === 'create') {\n      createEvent(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/events')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateEvent(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/events')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInputDateStart = (event) => {\n    handleInputDate(event, 'start')\n  }\n\n  const handleInputDateEnd = (event) => {\n    handleInputDate(event, 'end')\n  }\n\n  const handleInputDate = (event, name) => {\n    // see https://momentjs.com/docs/#/displaying/\n    let value = event\n    // if (event.format) {\n    //   value = event.format();\n    // }\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n  const handleInput = (event) => {\n    // console.log(data)\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n  // console.log('data')\n  // console.log(data)\n\n  return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>title</label><br/>\n        <input type=\"text\" value={data.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n        <label>start</label><br/>\n\n        <DatePicker\n          name=\"end\"\n          selected={data.start}\n          onChange={handleInputDateStart}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy HH:mm\"\n        />\n\n        <br/>\n        <label>end</label>\n        <br/>\n\n        <DatePicker\n          name=\"end\"\n          selected={data.end}\n          onChange={handleInputDateEnd}\n          showTimeSelect\n          timeFormat=\"HH:mm\"\n          timeIntervals={15}\n          timeCaption=\"time\"\n          dateFormat=\"MMMM d, yyyy HH:mm\"\n        />\n\n        <br/>\n        <label>Kurs</label><br/>\n        <select value={data.course_id} onChange={handleInput} name=\"courseId\" >\n          <option value={null}>--</option>\n          {courses.map((val)=> <option value={val.id}>{val.title}</option>)}\n        </select>\n        <br/>\n        <br/>\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveEvent(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(EventsEditPage)","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport { withRouter } from 'react-router-dom'\nimport { fetchEvent,  deleteEvent } from '../../services'\nimport { formatDateRange } from '../../utils'\n\nfunction EventsShowPage(props) {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchEvent(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, [props.match.params.id]);\n\n  const handleEditEvent = (id) => {\n    props.history.push({\n      pathname: `/events/${id}/edit`\n    });\n  };\n\n  const handleDeleteEvent = (id) => {\n    // const event = { prod_name: data.prod_name, prod_desc: data.prod_desc, prod_price: parseInt(data.prod_price) };\n    deleteEvent(id).then((result) => {\n      setIsLoading(false);\n      props.history.push('/events')\n    }).catch((error) => setIsLoading(false));\n  };\n\n  return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n        <Jumbotron>\n          <h2>{data.event.title}</h2>\n          <p>{formatDateRange(data.event.start, data.event.end)}</p>\n          <p>{((data.event.course_id) && data.event.course.title)}</p>\n          <p>\n            <br/>\n            <Button type=\"button\" variant=\"secondary\" onClick={() => { props.history.goBack() }}>Cancel</Button>&nbsp;\n            <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditEvent(data.event.id) }}>Edit</Button>&nbsp;\n            <Button type=\"button\" variant=\"danger\" onClick={() => { if (window.confirm('Delete?')) handleDeleteEvent(data.event.id) }}>Delete</Button>\n          </p>\n         </Jumbotron>)}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default withRouter(EventsShowPage);","import React from 'react';\n\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  item: {\n    flexDirection: 'row',\n    marginBottom: 5,\n  },\n  itemDatetime: {\n    backgroundColor: '#fff',\n    marginRight: '5px',\n    padding: '5px',\n    width: 150,\n    fontSize: 10,\n  },\n  itemTitle: {\n    backgroundColor: '#fff',\n    marginRight: '5px',\n    padding: '5px',\n    flex: 1,\n    fontSize: 10,\n  },\n});\n\nconst Schedule = ({ children }) => children\n\nexport const Item = ({ title, datetime }) => (\n  <View style={styles.item}>\n    <Text style={styles.itemDatetime}>{datetime}</Text>\n    <Text style={styles.itemTitle}>{title}</Text>\n  </View>\n);\n\nexport default Schedule","import React from 'react';\nimport { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\nimport Schedule, { Item } from './Schedule';\nimport {formatDateRange } from '../../../utils'\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'row',\n    backgroundColor: '#fff'\n  },\n  section: {\n    backgroundColor: '#eef',\n    margin: 10,\n    padding: 10,\n    flexGrow: 1\n  },\n  text: {\n    // backgroundColor: '#fff',\n  }\n});\n\n\nconst fetchData = () => {\n  // placeholder for static data or by params in the future\n  return []\n}\n\n\nconst EventEntries = ({events}) => (\n  <View>\n    <Schedule>\n      {events.map((event, i) => (\n        <Item key={i} title={event.title} datetime={formatDateRange(event.start, event.end)}></Item>\n      ))}\n    </Schedule>\n  </View>\n);\n\n\n// Create Document Component\nconst Doc = (props) => {\n  const events = (props.data && props.data.length) ? props.data : fetchData()\n  console.log(props.data)\n  return <Document>\n    <Page size=\"A4\" wrap={true} orientation='portrait' style={styles.page}>\n      <View style={styles.section}>\n        <Text style={styles.text}>Termine</Text>\n        <Text > </Text>\n        {/* split 30 items per page*/}\n        <EventEntries events={events} />\n      </View>\n    </Page>\n  </Document>\n}\n\n\nexport default Doc\n","import React from 'react';\nimport { withRouter } from 'react-router-dom'\nimport { PDFViewer } from '@react-pdf/renderer';\nimport EventsPdf from './Pdf/Doc';\n\n\nconst fetchData = () => {\n  return []\n}\n\n// Create Document Component\nconst EventsPrintPage = (props) => {\n\n  console.log(props)\n\n  const data=props.location.data || fetchData()\n\n  return <PDFViewer style={{width:'100%',height:'100%',minHeight:'600px'}}>\n    <EventsPdf data={data} />\n  </PDFViewer>\n}\n\n\nexport default withRouter(EventsPrintPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Table from 'react-bootstrap/Table'\nimport Pagination from 'react-bootstrap/Pagination'\n\nimport { withRouter, useLocation } from 'react-router-dom'\n\nimport { LinkContainer } from \"react-router-bootstrap\"\nimport { fetchCourses } from '../../services'\n\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nconst CoursesIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const query = useQuery();\n\n  const page = query.get(\"page\") || 1\n\n  useEffect(() => {\n    // let page = query.get(\"page\") || 1\n    fetchCourses(page).then((response) => {\n      // console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, [page]);\n\n  const handleAddCourse = () => {\n    props.history.push('courses/create')\n  }\n\n  const pageChanged = (e) => {\n    console.log(e.target)\n    // let page = Number(e.target.value)\n    // props.history.push(`courses?page=${page}`)\n  }\n \n  if (isLoading) {\n    return <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  }\n\n  // todo: prepare pager vars for more than 10 pages (with <Pagination.Ellipsis />)\n  // total > 10, from: (total / 2) +5, to: (total / 2) +5,\n  const pagerItems = new Array(data.pager.last).fill(1)\n\n  const isAdmin = (sessionStorage.getItem('admin_role') === 'true');\n\n  return <Container  style={{marginTop:'2em'}}>\n    <Row>\n      <Col>\n        <h1>{props.title}</h1>\n        {isAdmin && (<Button type=\"button\" variant=\"primary\" onClick={() => { handleAddCourse() }}>Add</Button>)}\n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n          <tbody>\n          {data.courses.map((item)=>{\n              return <tr>\n                <td>\n                {item.title}\n                </td>\n                <td>\n                {isAdmin && (\n                  <LinkContainer to={`/courses/${item.id}`}>\n                    <Button variant=\"primary\">mehr ...</Button>\n                  </LinkContainer>\n                )}\n                </td>\n              </tr>\n            } )}\n            </tbody>\n          </Table>\n\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <Pagination onClick={pageChanged}>\n            <Pagination.First href=\"courses?page=1\"/>\n            {((data.pager && data.pager.prev) &&\n              <Pagination.Prev value=\"1\" href={`courses?page=${data.pager.prev}`} />\n            )}\n            {pagerItems.map((item, key)=>{\n              let page = key +1\n              return (data.pager.page === page) ?\n                <Pagination.Item active>{page}</Pagination.Item> :\n                <Pagination.Item href={`courses?page=${page}`}>{page}</Pagination.Item>\n            })}\n            {((data.pager && data.pager.next) &&\n              <Pagination.Next value=\"1\" href={`courses?page=${data.pager.next}`} />\n            )}\n            <Pagination.Last href={`courses?page=${data.pager.last}`}/>\n          </Pagination>\n        </Col>\n      </Row>\n    </Container>\n}\n\nexport default withRouter(CoursesIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Card from 'react-bootstrap/Card'\nimport { withRouter } from 'react-router-dom'\nimport { fetchCourse,  deleteCourse } from '../../services'\n\nfunction CoursesShowPage(props) {\n  const [data, setData] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCourse(props.match.params.id).then((response)=>{\n      // console.log(response.data)\n      setData(response.data)\n      setIsLoading(false)\n    })\n  }, [props.match.params.id]);\n\n const handleEditCourse = (id) => {\n  props.history.push({\n   pathname: `/courses/${id}/edit`\n  });\n };\n\n const handleDeleteCourse = (id) => {\n  deleteCourse(id)\n   .then((result) => {\n    setIsLoading(false);\n    props.history.push('/courses')\n   }).catch((error) => setIsLoading(false));\n };\n\n\n const listEvents = () => {\n  return data.events.map((item)=>{\n    return (\n      <Card style={{marginTop:'4px'}}>\n        <Card.Header>{item.title}</Card.Header>\n        <Card.Body>\n          {/* <Card.Title>{item.title}</Card.Title> */}\n          <Card.Text>\n            {item.start} - {item.end}\n          </Card.Text>\n          {/* <LinkContainer to={`/events/${item.id}`}>\n            <Button variant=\"primary\">mehr ...</Button>\n          </LinkContainer> */}\n        </Card.Body>\n        {/* <Card.Footer className=\"text-muted\">2 days ago</Card.Footer> */}\n      </Card>\n      )\n    })\n  }\n\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <Jumbotron>\n    <h2>{data.course.title}</h2>\n    <p>{data.course.description}</p>\n\n    {listEvents()}\n\n    <p>\n      <br/>\n     <Button type=\"button\" variant=\"secondary\" onClick={() => { props.history.goBack() }}>Cancel</Button>&nbsp;\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleEditCourse(data.course.id) }}>Edit</Button>&nbsp;\n     <Button type=\"button\" variant=\"danger\" onClick={() => { if (window.confirm('Delete?')) handleDeleteCourse(data.course.id) }}>Delete</Button>\n    </p>\n   </Jumbotron>)}\n  </Col>\n  </Row>\n  </Container>\n );\n}\n\nexport default withRouter(CoursesShowPage);","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchCourse, updateCourse, createCourse } from '../../services'\n\nfunction CoursesEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    description:'',\n    title:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchCourse(props.match.params.id).then((response)=>{\n      console.log(response.data)\n      setData(response.data.course)\n      setIsLoading(false)\n    })\n  }, [props.match.params.id, props.mode]);\n\n  const handleSaveCourse = (id) => {\n    if (props.mode === 'create') {\n      createCourse(data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateCourse(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/courses')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    setIsMutated(true)\n  }\n\n return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n       {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n        <span className=\"sr-only\">Loading...</span>\n      </Spinner>)) || (\n      <Jumbotron>\n        <label>title</label><br/>\n        <input type=\"text\" value={data.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n        <label>description</label><br/>\n        <textarea style={{height:'10em', width:'100%', border:'none'}} value={data.description} onChange={handleInput} name=\"description\" ></textarea>\n        <br/>\n        <p>\n        <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveCourse(data.id) }}>Save</Button>&nbsp;\n        <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n        </p>\n      </Jumbotron>)}\n      </Col>\n    </Row>\n  </Container>\n )\n}\n\nexport default withRouter(CoursesEditPage)","import React, {useState, useEffect} from 'react'\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Spinner from 'react-bootstrap/Spinner'\nimport DatePicker from \"react-datepicker\"\n\nimport moment from 'moment'\n\nimport { fetchEventsInRange, updateEvent, createEvent } from '../services'\n\n\nimport 'react-big-calendar/lib/sass/styles.scss'\n// import 'react-big-calendar/lib/addons/dragAndDrop/styles.scss'\n\nconst localizer = momentLocalizer(moment)\n\n// const resourceMap = [\n//   { resourceId: 1, resourceTitle: 'Großer Raum' },\n//   { resourceId: 2, resourceTitle: 'Kleiner Raum' },\n//   { resourceId: 3, resourceTitle: 'Raum Oben' },\n//   // { resourceId: 4, resourceTitle: 'Raum 4' },\n// ]\n\nexport const CalendarPage = props => {\n\n  const [ isModalVisible, setIsModalVisible ] = useState(false)\n  const [ isModalCreateVisible, setIsModalCreateVisible ] = useState(false)\n  const [ dataId, setDataId ] = useState(0)\n  const [ data, setData ] = useState({events:[]})\n  const [ dateRange, setDateRange ] = useState({start:null,end:null})\n  const [isLoading, setIsLoading] = useState(true);\n  const [ newEvt, setNewEvt ] = useState({\n    start:new Date(),\n    end:0,\n    title:'',\n  })\n\n  const convertDates = (data) => {\n    const reviver = (key, value) => {\n      let startDate = new Date(key['start'])\n      let endDate = new Date(key['end'])\n      let start = moment(startDate)\n      let end = moment(endDate)\n      // add end if same day : startDate.format('Ymd') == endDate.format('Ymd')\n      key['title'] = key['title'] + \" \" + start.format('HH:mm') + \"-\" + end.format('HH:mm')\n      // Calendar expects Date Objects\n      key['start'] = startDate\n      key['end'] = endDate\n      return key;\n    }\n    data.events = data.events.map((k, v)=>reviver(k, v))\n    return data\n  }\n\n  useEffect(() => {\n    // console.log(\"Calendar\")\n    // the range of the calendar or current month (with offset)\n    let start = (dateRange.start && dateRange.start.toISOString()) ||\n      moment().startOf('month').subtract(6, 'days').format('YYYY-MM-DD hh:mm')\n    let end = (dateRange.end && dateRange.end.toISOString()) ||\n      moment().endOf('month').add(6, 'days').format('YYYY-MM-DD hh:mm')\n\n    fetchEventsInRange(start, end).then(response => {\n      // console.log('response.data')\n      // console.log(response.data.events)\n      if (response.data) {\n        let data = convertDates(response.data)\n        // let data = response.data\n        setData({events:data.events})\n      }\n      setIsLoading(false)\n    }).catch(e => console.log(e))\n  }, [isLoading, dateRange])\n\n  const showEvtDia = (e, evt) => {\n    // console && console.log(data)\n    setDataId(evt.id)\n    setIsModalVisible(true)\n    // isModalVisible,\n    // console && console.log(e, evt)\n  }\n\n  const showCreateEvtDia = ({start, end}) => {\n    let title = \"new...\"\n    setNewEvt({\n      start,\n      end,\n      title,\n    })\n    setIsModalCreateVisible(true)\n  }\n\n  const handleCloseModal = () => {\n    setIsModalVisible(false)\n    setIsModalCreateVisible(false)\n  }\n\n  const handleSaveCreateModal = () => {\n    if (!newEvt.title.length) {\n      // todo remove alert\n      alert('No Title given')\n      return false\n    }\n    if (typeof newEvt.start.format === 'function'\n      && typeof newEvt.end.format === 'function'\n      && newEvt.start.format('X') > newEvt.end.format('X')) {\n        // todo remove alert\n        alert('The End is not after Start')\n        return false\n    }\n    createEvent(newEvt)\n    setIsModalCreateVisible(false)\n    // workarround to reload to current view and daterange\n    // newEvt.start is Calendars defaultdate\n    setIsLoading(true)\n  }\n\n  const handleInputDateStart = (event) => {\n    setNewEvt({\n      ...newEvt,\n      'start': event,\n    })\n  }\n\n  const handleInputDateEnd = (event) => {\n    setNewEvt({\n      ...newEvt,\n      'end': event,\n    })\n  }\n\n  const handleInputDate = (event, name) => {\n    // see https://momentjs.com/docs/#/displaying/\n    let value = event\n    // if (event.format) {\n    //   value = event.format();\n    // }\n    setData({\n      ...data,\n      [name]: value\n    })\n    // setIsMutated(true)\n  }\n\n  const handleInput = (event) => {\n    // console.log(data)\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setNewEvt({\n      ...newEvt,\n      [name]: value,\n    })\n\n    // if name data_\n    // setData({\n    //   ...data,\n    //   [name]: value\n    // })\n    // setIsMutated(true)\n  }\n\n  const handleSaveUpdateModal = (dataId) => {\n    // console.log(eventById(dataId)\n    updateEvent(eventById(dataId))\n    setIsModalVisible(false)\n  }\n\n  const form = (evt) => {\n    // return evt.start\n    // console.log(evt.start) evt.start.toString()\n    // resourceMap.map()\n    return <>\n\n      Start:\n      <DatePicker\n        name=\"start\"\n        selected={evt.start}\n        onChange={(evt) => handleInputDate(evt, 'start')}\n        showTimeSelect\n        timeFormat=\"HH:mm\"\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy HH:mm\"\n      />\n\n      Ende:\n      <DatePicker\n        name=\"end\"\n        selected={evt.end}\n        onChange={(evt) => handleInputDate(evt, 'end')}\n        showTimeSelect\n        timeFormat=\"HH:mm\"\n        timeIntervals={15}\n        timeCaption=\"time\"\n        dateFormat=\"MMMM d, yyyy HH:mm\"\n      />\n\n      {/*\n      Raum: <select>\n      {resourceMap.map((room) => {\n        return (evt.resourceId !== room.resourceId) ?\n        <option value={room.resourceId}>{room.resourceTitle}</option>\n        :\n        <option selected value={room.resourceId}>{room.resourceTitle}</option>\n      })\n      }</select>\n       */}\n    </>\n  }\n\n  const eventById = (id) => {\n    return data.events.find(item => item.id === id)\n  }\n\n  return (\n    (!isLoading) ?\n    // parent container of calendar-month-view requires a min-height\n    <div style={{ height: '100%', minHeight: 600, padding:'10px' }}>\n\n    <Calendar\n      defaultDate={newEvt.start}\n      localizer={localizer}\n      events={data.events}\n      startAccessor=\"start\"\n      endAccessor=\"end\"\n      style={{ height: 500 }}\n      culture='de'\n      selectable\n      onSelectEvent={(evt, e)=> showEvtDia(e, evt)}\n      onSelectSlot={(evt) => showCreateEvtDia(evt)}\n      onRangeChange={(evt) => {\n          // console.log('onRangeChange')\n          // console.log(evt)\n          setDateRange({start:evt.start, end:evt.end})\n        }\n      }\n      // onNavigate={(evt) => {\n      //     console.log('onNavigate')\n      //     console.log(evt)\n      //   }\n      // }\n      // onView={(evt) => {\n      //     console.log('onView')\n      //     console.log(evt)\n      //   }\n      // }\n\n      // views={allViews}\n      // step={60}\n      // showMultiDayTimes\n      // defaultDate={new Date()}\n      // resources={resourceMap}\n      // resourceIdAccessor=\"resourceId\"\n      // resourceTitleAccessor=\"resourceTitle\"\n    />\n\n    <Modal show={isModalVisible} onHide={handleCloseModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>{dataId && eventById(dataId).title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{dataId && form(eventById(dataId))}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => { handleSaveUpdateModal(dataId) }} >\n          Save Changes\n        </Button>\n      </Modal.Footer>\n      </Modal>\n\n      <Modal show={isModalCreateVisible} onHide={handleCloseModal}>\n      <Modal.Header closeButton>\n        <Modal.Title>\n          <input type=\"text\" value={newEvt.title} name=\"title\" onChange={handleInput} style={{width:'100%'}} /><br/>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{\n      (isModalCreateVisible &&\n        <>\n          Start:\n          <DatePicker\n            name=\"start\"\n            selected={newEvt.start}\n            onChange={handleInputDateStart}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"MMMM d, yyyy HH:mm\"\n          />\n\n          Ende:\n          <DatePicker\n            name=\"end\"\n            selected={newEvt.end}\n            onChange={handleInputDateEnd}\n            showTimeSelect\n            timeFormat=\"HH:mm\"\n            timeIntervals={15}\n            timeCaption=\"time\"\n            dateFormat=\"MMMM d, yyyy HH:mm\"\n          />\n        </>\n      )}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={handleCloseModal}>\n          Close\n        </Button>\n        <Button variant=\"primary\" onClick={() => { handleSaveCreateModal() }} >\n          Save Changes\n        </Button>\n      </Modal.Footer>\n      </Modal>\n\n    </div>\n   : <Spinner animation=\"border\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </Spinner>\n  )\n}\n","import React from 'react';\n\nexport const DashboardPage = (props) => {\n  return <div><h1>Dashboard</h1>\n    <p>{props.title}</p>\n  </div>\n}","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Table from 'react-bootstrap/Table'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUsers } from '../../services'\n\nconst UsersIndexPage = (props) => {\n\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetchUsers().then((response)=>{\n      // console.log(response)\n      // console.log(response.data)\n      setData(response.data.users)\n      setIsLoading(false)\n    })\n   }, []);\n\n  const handleAddUser = () => {\n    props.history.push('users/create')\n  }\n\n  const handleEditUser = (id) => {\n    props.history.push(`users/${id}/edit`)\n  }\n\n  const isAdmin = (sessionStorage.getItem('admin_role') === 'true');\n\n  return <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n   {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n    <span className=\"sr-only\">Loading...</span>\n   </Spinner>)) || (\n   <>\n    <h1>Benutzer</h1>\n    {isAdmin &&\n     <Button type=\"button\" variant=\"primary\" onClick={() => { handleAddUser() }}>Add</Button>\n    }\n    <Table responsive>\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>E-Mail</th>\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n    {data.map((item)=>{\n        return <tr>\n          <td>\n          {item.id}\n          </td>\n          <td>\n          {item.email}  {item.first_name} {item.last_name}\n          </td>\n          <td>\n          {isAdmin && (<Button type=\"button\" variant=\"primary\" onClick={() => { handleEditUser(item.id) }}>Edit</Button>)}\n          </td>\n        </tr>\n      } )}\n      </tbody>\n    </Table>\n   </>)}\n  </Col>\n  </Row>\n  </Container>\n\n}\n\n\nexport default withRouter(UsersIndexPage)\n","import React, { useState, useEffect } from 'react'\nimport Spinner from 'react-bootstrap/Spinner'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { fetchUser, updateUser, createUser } from '../../services'\n\n\nfunction removeByKey(myObj, deleteKey) {\n  return Object.keys(myObj)\n    .filter(key => key !== deleteKey)\n    .reduce((result, current) => {\n      result[current] = myObj[current];\n      return result;\n  }, {});\n}\n\n\nfunction UsersEditPage(props) {\n  const [data, setData] = useState({\n    id:0,\n    username:'',\n    email:''\n  })\n  const [isLoading, setIsLoading] = useState(true)\n  const [isMutated, setIsMutated] = useState(false)\n\n  useEffect(() => {\n    if (props.mode === 'create') {\n      setIsLoading(false)\n      return\n    }\n    fetchUser(props.match.params.id).then((response)=>{\n      // console.log(response.data)\n      setData(response.data.user)\n      setIsLoading(false)\n    })\n  }, [props.match.params.id, props.mode]);\n\n  const handleSaveUser = (id) => {\n    if (props.mode === 'create') {\n      const newUserData = removeByKey(data, 'id')\n      createUser(newUserData)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    } else {\n      updateUser(id, data)\n      .then((result) => {\n        setIsLoading(false)\n        props.history.push('/users')\n      }).catch((error) => setIsLoading(false));\n    }\n  }\n\n  const handleInput = (event) => {\n    const name = event.target.name\n    const value =\n      event.target.type === \"checkbox\" ? event.target.checked : event.target.value;\n\n    setData({\n      ...data,\n      [name]: value\n    })\n    // console.log(data)\n    setIsMutated(true)\n  }\n\n  return (\n    <Container style={{marginTop:'2em'}}>\n      <Row>\n        <Col>\n        {((isLoading) && (<Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>)) || (\n          <Jumbotron>\n            <label>email</label><br/>\n            <input type=\"text\" value={data.email} name=\"email\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            <label>username</label><br/>\n            <input type=\"text\" value={data.username} name=\"username\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            {((props.mode === 'create') && (\n            <>\n            <label>password</label><br/>\n            <input type=\"password\" value={data.password} name=\"password\" onChange={handleInput} style={{width:'100%'}} /><br/>\n\n            <label>password confirmation</label><br/>\n            <input type=\"password\" value={data.password_confirmation} name=\"password_confirmation\" onChange={handleInput} style={{width:'100%'}} /><br/>\n            </>\n            ))}\n\n            <br/>\n            <p>\n            <Button disabled={!isMutated} type=\"button\" variant=\"primary\" onClick={() => { handleSaveUser(data.id) }}>Save</Button>&nbsp;\n            <Button type=\"button\" variant=\"normal\" onClick={() => { props.history.goBack() }}>Cancel</Button>\n            </p>\n          </Jumbotron>)}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default withRouter(UsersEditPage)","import React from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Formik, Form as FormikForm, Field, ErrorMessage } from 'formik'\n\nimport \"../assets/sass/login.sass\"\n\nexport const LoginPage = (props) => {\n\n\n  return (\n    <div className=\"container\">\n      <div className=\"d-flex justify-content-center h-100\">\n        <div className=\"card zoomInUp animated\">\n          <div className=\"card-header\">\n\n            <Formik\n              initialValues={{ email: '', password: '' }}\n              validate={values => {\n                const errors = {};\n                if (!values.email) {\n                  errors.email = 'Required';\n                } else if (\n                  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                ) {\n                  errors.email = 'Invalid email address';\n                }\n                return errors;\n              }}\n              onSubmit={(values, { setSubmitting }) => {\n                setTimeout(() => {\n                  props.onSubmit(values)\n                  setSubmitting(false);\n                }, 400);\n              }}\n            >\n              {({ isSubmitting }) => (\n                <FormikForm>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Field type=\"email\" name=\"email\"  className='form-control'  />\n                    <ErrorMessage name=\"email\" component=\"div\" />\n                    <Form.Text className=\"text-muted\">\n                      We'll never share your email with anyone else.\n                    </Form.Text>\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Field type=\"password\" name=\"password\" className='form-control' />\n                    <ErrorMessage name=\"password\" component=\"div\" />\n                  </Form.Group>\n\n                  <Button variant=\"primary\" type=\"submit\" disabled={isSubmitting} className=\"login-btn\">\n                    Submit\n                  </Button>\n\n                </FormikForm>\n              )}\n            </Formik>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport const NotFoundPage = () => {\n  return <div style={{background:'#fff', marginTop:'2em'}}>\n    <h1>404 Not Found</h1>\n  </div>\n}\n","import React from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from \"react-router-dom\"\nimport { withRouter } from 'react-router-dom'\n// import { LinkContainer } from \"react-router-bootstrap\"\nimport '../assets/sass/main.sass';\n\nconst LayoutAdmin = (props) => {\n\n  const isAdmin = (sessionStorage.getItem('admin_role') === 'true');\n\n  return (<>\n    <Navbar sticky=\"top\" bg=\"light\">\n      {/* <Navbar.Brand href=\"/\">::</Navbar.Brand> */}\n      <Nav className=\"mr-auto\" variant=\"pills\" >\n        <Nav.Item>\n          <Link to=\"/courses\"> Courses </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/calendar\"> Calendar </Link>\n        </Nav.Item>\n        <Nav.Item>\n          <Link to=\"/events\"> Termine </Link>\n        </Nav.Item>\n        {isAdmin && (\n        <Nav.Item>\n          <Link to=\"/users\"> Users</Link>\n        </Nav.Item>\n        )}\n      </Nav>\n\n\n      {/* Example buttons to switch language on the fly */}\n      <Button onClick={(e) => props.changeLanguage('en')} variant=\"outline-primary\">en</Button>\n      <Button onClick={(e) => props.changeLanguage('ja')} variant=\"outline-primary\">ja</Button>\n      <Button onClick={(e) => props.changeLanguage('de')} variant=\"outline-primary\">de</Button>\n       \n\n      {/* <Nav.Item onClick={props.doSignOut}>Logout</Nav.Item> */}\n      <Button onClick={(e) => props.doSignOut(e)} variant=\"outline-primary\">Logout</Button>\n      {/* <Form inline>\n        <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n        <Button variant=\"outline-info\">Search</Button>\n      </Form> */}\n    </Navbar>\n\n    {props.children}\n\n  </>)\n}\n\nexport default withRouter(LayoutAdmin);","import React, {useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router, Switch, Route, Redirect\n} from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport EventsIndexPage from './components/Events/EventsIndexPage';\nimport EventsEditPage from './components/Events/EventsEditPage';\nimport EventsShowPage from './components/Events/EventsShowPage';\nimport EventsPrintPage from './components/Events/EventsPrintPage';\nimport CoursesIndexPage from './components/Courses/CoursesIndexPage';\nimport CoursesShowPage  from './components/Courses/CoursesShowPage';\nimport CoursesEditPage  from './components/Courses/CoursesEditPage';\nimport { CalendarPage } from './components/CalendarPage';\nimport { DashboardPage } from './components/DashboardPage';\nimport UsersIndexPage from './components/Users/UsersIndexPage';\nimport UsersEditPage from './components/Users/UsersEditPage';\nimport { LoginPage } from './components/LoginPage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport LayoutAdmin  from './components/LayoutAdmin';\nimport { signIn, signOut } from './services'\n\n\n  \nfunction App() {\n  const { t, i18n } = useTranslation();\n  const changeLanguage = code => {\n    i18n.changeLanguage(code);\n  };\n\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  useEffect(()=>{\n    const token = sessionStorage.getItem('token')\n    if (token)\n      setIsAuthenticated(true)\n      // meFromToken(token)\n      // .then((resp) => setIsAuthenticated(resp))\n  }, [setIsAuthenticated])\n\n\n  const doSignIn = (data) => {\n    // e.preventDefault()\n    signIn(data).then(response => {\n      console.log(response)\n      if (response && response.is_success) {\n        setIsAuthenticated(true)\n        // user.authentication_token\n        sessionStorage.setItem('token', response.data.user.authentication_token)\n        // resources are protected serverside  \n        sessionStorage.setItem('user_role', Boolean(response.data.user.user_role))\n        sessionStorage.setItem('admin_role', Boolean(response.data.user.admin_role))\n        // sessionStorage.setItem('supervisor_role', Boolean(response.data.supervisor_role))\n      }\n    }).catch(err => console.log(err))\n  }\n\n  const doSignOut = (e) => {\n    e.preventDefault()\n    // console.log(\"sign out\")\n    signOut().then(response => {\n      // console.log(response)\n      setIsAuthenticated(false)\n      sessionStorage.removeItem('token')\n    }).catch(e => console.log(e))\n  }\n\n  return (\n    (!isAuthenticated && (\n      <div className=\"login\">\n       <LoginPage onSubmit={doSignIn} />\n     </div>\n   )) || (\n   <Router>\n      <Switch>\n       <Route exact path=\"/\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage} >\n          <DashboardPage title={t('Welcome back!')} />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/pdf/events\">\n          <EventsPrintPage />\n       </Route>\n       <Route exact path=\"/events\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <EventsIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <EventsEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/create\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <EventsEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/events/:id\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <EventsShowPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <CoursesIndexPage title={t('Courses')} />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <CoursesEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/create\">\n        <LayoutAdmin doSignOut={doSignOut} changeLanguage={changeLanguage}>\n          <CoursesEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/courses/:id\">\n        <LayoutAdmin doSignOut={doSignOut}  changeLanguage={changeLanguage}>\n          <CoursesShowPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/calendar\">\n        <LayoutAdmin doSignOut={doSignOut}  changeLanguage={changeLanguage}>\n          <CalendarPage />\n        </LayoutAdmin>\n       </Route>\n       <Route exact path=\"/users/:id/edit\">\n        <LayoutAdmin doSignOut={doSignOut}  changeLanguage={changeLanguage}>\n          <UsersEditPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users/create\">\n        <LayoutAdmin doSignOut={doSignOut}  changeLanguage={changeLanguage}>\n          <UsersEditPage mode='create' />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/users\">\n        <LayoutAdmin doSignOut={doSignOut}  changeLanguage={changeLanguage}>\n          <UsersIndexPage />\n        </LayoutAdmin>\n       </Route>\n       <Route path=\"/oops\" component={NotFoundPage} />\n       <Redirect to='/oops' />\n    </Switch>\n    </Router>)\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n\ni18n\n.use(initReactI18next) \n// .use(LanguageDetector)\n.init({\n  // the translations - todo xhr-backend or move them in a JSON file and import them \n  resources: {\n    en: {\n      translation: {\n        \"Welcome back!\": \"Welcome back!\",\n        \"Courses\": \"Courses\"\n      }\n    },\n    de: {\n      translation: {\n        \"Welcome back!\": \"Willkommen zurück!\",\n        \"Courses\": \"Kurse\" \n      }\n    },\n    ja: {\n      translation: {\n        \"Welcome back!\": \"おかえり　なさい。\",\n        \"Courses\": \"コース\" // 語学コース\n      }\n    },\n\n  },\n  lng: \"de\", // ja, en or if you're using a language detector, do not define the lng option\n  fallbackLng: \"de\",\n\n  interpolation: {\n    escapeValue: false\n  }\n});\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\nimport './i18n';\n\n\n\nimport \"./assets/sass/main.sass\";\nimport \"./assets/css/animate.min.css\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}